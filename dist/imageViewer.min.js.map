{"version":3,"sources":["webpack:///imageViewer.min.js","webpack:///webpack/bootstrap 221d6d552e3319acf68a","webpack:///./src/common/dom.js","webpack:///./src/common/profile.js","webpack:///./src/common/lock.js","webpack:///./src/lib/hammer.js","webpack:///./src/index.js","webpack:///./src/core/imageViewer.js","webpack:///./src/common/debug.js","webpack:///./src/core/viewer.js","webpack:///./src/common/event.js","webpack:///./src/css/index.css?4410","webpack:///./src/css/index.css","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","query","selector","el","document","querySelectorAll","removeElement","element","parentElement","parentNode","removeChild","setTranslateStyle","x","y","style","transformProp","setScaleAndTranslateStyle","scale","value","props","createElement","availProp","forEach","prop","undefined","LOCK_NAME","ITEM_ANIMATION_CLASS","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","length","descriptor","writable","key","protoProps","staticProps","Lock","this","_locks","default","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","window","exportName","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","deprecate","method","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","arguments","inherit","child","base","properties","childP","baseP","create","_super","assign","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","inStr","str","find","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","sort","results","values","push","a","b","prefixed","prefix","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","createInputInstance","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","abs","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","cssProps","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","Date","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","remove","on","events","off","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","_interopRequireDefault","_imageViewer","_imageViewer2","_index","ImageViewer","_debug","_dom","_profile","_lock","_lock2","_hammer","_hammer2","_viewer","_viewer2","images","opt","headerEl","bodyEl","footerEl","currentNumberEl","totalNumberEl","imagesLength","container","enableScale","currentIndex","startIndex","viewers","scaleStart","width","height","itemList","hammer","translateX","divEl","innerHTML","imageViewerTemplate","firstElementChild","appendChild","children","clientWidth","clientHeight","headerRender","footerRender","swipeInByIndex","createLock","innerText","mc","hPinch","hPan","hTap","_dealWithMoveActionStart","bind","_dealWithMoveAction","_dealWithMoveActionEnd","_dealWithScaleActionStart","_dealWithScaleAction","_dealWithScaleActionEnd","getLockState","classList","beforeSwipe","willChange","needSwipe","needBreak","swipeFirstRight","swipeLastLeft","_checkDistance","viewer","removeAnimation","swipeToPrev","swipeToNext","_updateCountElement","afterSwipe","_pinchStart","_pinch","_pinchEnd","minuend","loop","addend","displayIndex","releaseLock","shift","pop","_getPrevImage","image","_getSpecificImage","loopViewers","_getNextImage","isNaN","_getCurrentImage","debug","_init","display","_create","_bindEvent","msg","_event","_event2","Viewer","imageViewer","panelEl","imageEl","realWidth","realHeight","translateY","currentScale","translatePanelX","translatePanelY","currentPanelX","currentPanelY","allowDistanceX","allowDistanceY","needResetX","needResetY","EVENT_NAME","resetScale","_this","needLoad","_initImage","_this2","_translatePanel","_translatePanelEnd","isScale","getLock","tempX","_calculate","addAnimation","Event","_enableMultiple","_handlers","enableMultiple","_len","_key","exit","content","transform","locals","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","map","sourceRoot","sourceMap","unescape","encodeURIComponent","JSON","stringify","list","toString","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","part","insertStyleElement","getElement","insertInto","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","setAttribute","result","singleton","styleIndex","singletonCounter","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","blob","oldSrc","isOldIE","memo","atob","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","$1","newUrl"],"mappings":"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","file":"imageViewer.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar transformProp = function getTransformProperty() {\n    var props = ['transform', 'webkitTransform', 'MozTransform', 'oTransform', 'msTransform'];\n    var style = document.createElement('div').style,\n        availProp = '';\n    props.forEach(function (prop) {\n        if (style[prop] !== undefined) {\n            availProp = prop;\n        }\n    });\n    return availProp;\n}();\n\nfunction query(selector, el) {\n    el = el || document;\n    return el.querySelectorAll(selector);\n}\n\nfunction removeElement(element) {\n    var parentElement = element.parentNode;\n    if (parentElement) {\n        parentElement.removeChild(element);\n    }\n}\n\nfunction setTranslateStyle(el, x, y) {\n    el.style[transformProp] = 'translate3d(' + (x + 'px') + ',' + (y + 'px') + ',0)';\n}\n\nfunction setScaleAndTranslateStyle(el, scale, x, y) {\n    el.style[transformProp] = 'scale3d(' + scale + ',' + scale + ',1) translate3d(' + (x + 'px') + ',' + (y + 'px') + ',0)';\n}\n\nexports.query = query;\nexports.removeElement = removeElement;\nexports.setTranslateStyle = setTranslateStyle;\nexports.setScaleAndTranslateStyle = setScaleAndTranslateStyle;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar ITEM_ANIMATION_CLASS = 'viewer-animation';\nvar LOCK_NAME = 'STOP_SWIPE';\n\nexports.LOCK_NAME = LOCK_NAME;\nexports.ITEM_ANIMATION_CLASS = ITEM_ANIMATION_CLASS;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Lock = function () {\n    function Lock() {\n        _classCallCheck(this, Lock);\n\n        this._locks = {};\n    }\n\n    _createClass(Lock, [{\n        key: \"createLock\",\n        value: function createLock(name) {\n            this._locks[name] = false;\n        }\n    }, {\n        key: \"deleteLock\",\n        value: function deleteLock(name) {\n            delete this._locks[name];\n        }\n    }, {\n        key: \"getLock\",\n        value: function getLock(name) {\n            this._locks[name] = true;\n        }\n    }, {\n        key: \"releaseLock\",\n        value: function releaseLock(name) {\n            this._locks[name] = false;\n        }\n    }, {\n        key: \"getLockState\",\n        value: function getLockState(name) {\n            return this._locks[name];\n        }\n    }]);\n\n    return Lock;\n}();\n\nexports.default = new Lock();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (window, document, exportName, undefined) {\n    'use strict';\n\n    var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n    var TEST_ELEMENT = document.createElement('div');\n\n    var TYPE_FUNCTION = 'function';\n\n    var round = Math.round;\n    var abs = Math.abs;\n    var now = Date.now;\n\n    /**\n     * set a timeout with a given scope\n     * @param {Function} fn\n     * @param {Number} timeout\n     * @param {Object} context\n     * @returns {number}\n     */\n    function setTimeoutContext(fn, timeout, context) {\n        return setTimeout(bindFn(fn, context), timeout);\n    }\n\n    /**\n     * if the argument is an array, we want to execute the fn on each entry\n     * if it aint an array we don't want to do a thing.\n     * this is used by all the methods that accept a single and array argument.\n     * @param {*|Array} arg\n     * @param {String} fn\n     * @param {Object} [context]\n     * @returns {Boolean}\n     */\n    function invokeArrayArg(arg, fn, context) {\n        if (Array.isArray(arg)) {\n            each(arg, context[fn], context);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * walk objects and arrays\n     * @param {Object} obj\n     * @param {Function} iterator\n     * @param {Object} context\n     */\n    function each(obj, iterator, context) {\n        var i;\n\n        if (!obj) {\n            return;\n        }\n\n        if (obj.forEach) {\n            obj.forEach(iterator, context);\n        } else if (obj.length !== undefined) {\n            i = 0;\n            while (i < obj.length) {\n                iterator.call(context, obj[i], i, obj);\n                i++;\n            }\n        } else {\n            for (i in obj) {\n                obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n            }\n        }\n    }\n\n    /**\n     * wrap a method with a deprecation warning and stack trace\n     * @param {Function} method\n     * @param {String} name\n     * @param {String} message\n     * @returns {Function} A new function wrapping the supplied method.\n     */\n    function deprecate(method, name, message) {\n        var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n        return function () {\n            var e = new Error('get-stack-trace');\n            var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n            var log = window.console && (window.console.warn || window.console.log);\n            if (log) {\n                log.call(window.console, deprecationMessage, stack);\n            }\n            return method.apply(this, arguments);\n        };\n    }\n\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} target\n     * @param {...Object} objects_to_assign\n     * @returns {Object} target\n     */\n    var assign;\n    if (typeof Object.assign !== 'function') {\n        assign = function assign(target) {\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var output = Object(target);\n            for (var index = 1; index < arguments.length; index++) {\n                var source = arguments[index];\n                if (source !== undefined && source !== null) {\n                    for (var nextKey in source) {\n                        if (source.hasOwnProperty(nextKey)) {\n                            output[nextKey] = source[nextKey];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n    } else {\n        assign = Object.assign;\n    }\n\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} dest\n     * @param {Object} src\n     * @param {Boolean} [merge=false]\n     * @returns {Object} dest\n     */\n    var extend = deprecate(function extend(dest, src, merge) {\n        var keys = Object.keys(src);\n        var i = 0;\n        while (i < keys.length) {\n            if (!merge || merge && dest[keys[i]] === undefined) {\n                dest[keys[i]] = src[keys[i]];\n            }\n            i++;\n        }\n        return dest;\n    }, 'extend', 'Use `assign`.');\n\n    /**\n     * merge the values from src in the dest.\n     * means that properties that exist in dest will not be overwritten by src\n     * @param {Object} dest\n     * @param {Object} src\n     * @returns {Object} dest\n     */\n    var merge = deprecate(function merge(dest, src) {\n        return extend(dest, src, true);\n    }, 'merge', 'Use `assign`.');\n\n    /**\n     * simple class inheritance\n     * @param {Function} child\n     * @param {Function} base\n     * @param {Object} [properties]\n     */\n    function inherit(child, base, properties) {\n        var baseP = base.prototype,\n            childP;\n\n        childP = child.prototype = Object.create(baseP);\n        childP.constructor = child;\n        childP._super = baseP;\n\n        if (properties) {\n            assign(childP, properties);\n        }\n    }\n\n    /**\n     * simple function bind\n     * @param {Function} fn\n     * @param {Object} context\n     * @returns {Function}\n     */\n    function bindFn(fn, context) {\n        return function boundFn() {\n            return fn.apply(context, arguments);\n        };\n    }\n\n    /**\n     * let a boolean value also be a function that must return a boolean\n     * this first item in args will be used as the context\n     * @param {Boolean|Function} val\n     * @param {Array} [args]\n     * @returns {Boolean}\n     */\n    function boolOrFn(val, args) {\n        if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) == TYPE_FUNCTION) {\n            return val.apply(args ? args[0] || undefined : undefined, args);\n        }\n        return val;\n    }\n\n    /**\n     * use the val2 when val1 is undefined\n     * @param {*} val1\n     * @param {*} val2\n     * @returns {*}\n     */\n    function ifUndefined(val1, val2) {\n        return val1 === undefined ? val2 : val1;\n    }\n\n    /**\n     * addEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function addEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.addEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * removeEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function removeEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.removeEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * find if a node is in the given parent\n     * @method hasParent\n     * @param {HTMLElement} node\n     * @param {HTMLElement} parent\n     * @return {Boolean} found\n     */\n    function hasParent(node, parent) {\n        while (node) {\n            if (node == parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    }\n\n    /**\n     * small indexOf wrapper\n     * @param {String} str\n     * @param {String} find\n     * @returns {Boolean} found\n     */\n    function inStr(str, find) {\n        return str.indexOf(find) > -1;\n    }\n\n    /**\n     * split string on whitespace\n     * @param {String} str\n     * @returns {Array} words\n     */\n    function splitStr(str) {\n        return str.trim().split(/\\s+/g);\n    }\n\n    /**\n     * find if a array contains the object using indexOf or a simple polyFill\n     * @param {Array} src\n     * @param {String} find\n     * @param {String} [findByKey]\n     * @return {Boolean|Number} false when not found, or the index\n     */\n    function inArray(src, find, findByKey) {\n        if (src.indexOf && !findByKey) {\n            return src.indexOf(find);\n        } else {\n            var i = 0;\n            while (i < src.length) {\n                if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n                    return i;\n                }\n                i++;\n            }\n            return -1;\n        }\n    }\n\n    /**\n     * convert array-like objects to real arrays\n     * @param {Object} obj\n     * @returns {Array}\n     */\n    function toArray(obj) {\n        return Array.prototype.slice.call(obj, 0);\n    }\n\n    /**\n     * unique array with objects based on a key (like 'id') or just by the array's value\n     * @param {Array} src [{id:1},{id:2},{id:1}]\n     * @param {String} [key]\n     * @param {Boolean} [sort=False]\n     * @returns {Array} [{id:1},{id:2}]\n     */\n    function uniqueArray(src, key, sort) {\n        var results = [];\n        var values = [];\n        var i = 0;\n\n        while (i < src.length) {\n            var val = key ? src[i][key] : src[i];\n            if (inArray(values, val) < 0) {\n                results.push(src[i]);\n            }\n            values[i] = val;\n            i++;\n        }\n\n        if (sort) {\n            if (!key) {\n                results = results.sort();\n            } else {\n                results = results.sort(function sortUniqueArray(a, b) {\n                    return a[key] > b[key];\n                });\n            }\n        }\n\n        return results;\n    }\n\n    /**\n     * get the prefixed property\n     * @param {Object} obj\n     * @param {String} property\n     * @returns {String|Undefined} prefixed\n     */\n    function prefixed(obj, property) {\n        var prefix, prop;\n        var camelProp = property[0].toUpperCase() + property.slice(1);\n\n        var i = 0;\n        while (i < VENDOR_PREFIXES.length) {\n            prefix = VENDOR_PREFIXES[i];\n            prop = prefix ? prefix + camelProp : property;\n\n            if (prop in obj) {\n                return prop;\n            }\n            i++;\n        }\n        return undefined;\n    }\n\n    /**\n     * get a unique id\n     * @returns {number} uniqueId\n     */\n    var _uniqueId = 1;\n\n    function uniqueId() {\n        return _uniqueId++;\n    }\n\n    /**\n     * get the window object of an element\n     * @param {HTMLElement} element\n     * @returns {DocumentView|Window}\n     */\n    function getWindowForElement(element) {\n        var doc = element.ownerDocument || element;\n        return doc.defaultView || doc.parentWindow || window;\n    }\n\n    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\n    var SUPPORT_TOUCH = 'ontouchstart' in window;\n    var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\n    var INPUT_TYPE_TOUCH = 'touch';\n    var INPUT_TYPE_PEN = 'pen';\n    var INPUT_TYPE_MOUSE = 'mouse';\n    var INPUT_TYPE_KINECT = 'kinect';\n\n    var COMPUTE_INTERVAL = 25;\n\n    var INPUT_START = 1;\n    var INPUT_MOVE = 2;\n    var INPUT_END = 4;\n    var INPUT_CANCEL = 8;\n\n    var DIRECTION_NONE = 1;\n    var DIRECTION_LEFT = 2;\n    var DIRECTION_RIGHT = 4;\n    var DIRECTION_UP = 8;\n    var DIRECTION_DOWN = 16;\n\n    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\n    var PROPS_XY = ['x', 'y'];\n    var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n    /**\n     * create new input type manager\n     * @param {Manager} manager\n     * @param {Function} callback\n     * @returns {Input}\n     * @constructor\n     */\n    function Input(manager, callback) {\n        var self = this;\n        this.manager = manager;\n        this.callback = callback;\n        this.element = manager.element;\n        this.target = manager.options.inputTarget;\n\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n        // so when disabled the input events are completely bypassed.\n        this.domHandler = function (ev) {\n            if (boolOrFn(manager.options.enable, [manager])) {\n                self.handler(ev);\n            }\n        };\n\n        this.init();\n    }\n\n    Input.prototype = {\n        /**\n         * should handle the inputEvent data and trigger the callback\n         * @virtual\n         */\n        handler: function handler() {},\n\n        /**\n         * bind the events\n         */\n        init: function init() {\n            this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        },\n\n        /**\n         * unbind the events\n         */\n        destroy: function destroy() {\n            this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        }\n    };\n\n    /**\n     * create new input type manager\n     * called by the Manager constructor\n     * @param {Hammer} manager\n     * @returns {Input}\n     */\n    function createInputInstance(manager) {\n        var Type;\n        var inputClass = manager.options.inputClass;\n\n        if (inputClass) {\n            Type = inputClass;\n        } else if (SUPPORT_POINTER_EVENTS) {\n            Type = PointerEventInput;\n        } else if (SUPPORT_ONLY_TOUCH) {\n            Type = TouchInput;\n        } else if (!SUPPORT_TOUCH) {\n            Type = MouseInput;\n        } else {\n            Type = TouchMouseInput;\n        }\n        return new Type(manager, inputHandler);\n    }\n\n    /**\n     * handle input events\n     * @param {Manager} manager\n     * @param {String} eventType\n     * @param {Object} input\n     */\n    function inputHandler(manager, eventType, input) {\n        var pointersLen = input.pointers.length;\n        var changedPointersLen = input.changedPointers.length;\n        var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n        var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n\n        input.isFirst = !!isFirst;\n        input.isFinal = !!isFinal;\n\n        if (isFirst) {\n            manager.session = {};\n        }\n\n        // source event is the normalized value of the domEvents\n        // like 'touchstart, mouseup, pointerdown'\n        input.eventType = eventType;\n\n        // compute scale, rotation etc\n        computeInputData(manager, input);\n\n        // emit secret event\n        manager.emit('hammer.input', input);\n\n        manager.recognize(input);\n        manager.session.prevInput = input;\n    }\n\n    /**\n     * extend the data with some usable properties like scale, rotate, velocity etc\n     * @param {Object} manager\n     * @param {Object} input\n     */\n    function computeInputData(manager, input) {\n        var session = manager.session;\n        var pointers = input.pointers;\n        var pointersLength = pointers.length;\n\n        // store the first input to calculate the distance and direction\n        if (!session.firstInput) {\n            session.firstInput = simpleCloneInputData(input);\n        }\n\n        // to compute scale and rotation we need to store the multiple touches\n        if (pointersLength > 1 && !session.firstMultiple) {\n            session.firstMultiple = simpleCloneInputData(input);\n        } else if (pointersLength === 1) {\n            session.firstMultiple = false;\n        }\n\n        var firstInput = session.firstInput;\n        var firstMultiple = session.firstMultiple;\n        var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n        var center = input.center = getCenter(pointers);\n        input.timeStamp = now();\n        input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n        input.angle = getAngle(offsetCenter, center);\n        input.distance = getDistance(offsetCenter, center);\n\n        computeDeltaXY(session, input);\n        input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n        var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n        input.overallVelocityX = overallVelocity.x;\n        input.overallVelocityY = overallVelocity.y;\n        input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n\n        input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n        input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n        input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n\n        computeIntervalInputData(session, input);\n\n        // find the correct target\n        var target = manager.element;\n        if (hasParent(input.srcEvent.target, target)) {\n            target = input.srcEvent.target;\n        }\n        input.target = target;\n    }\n\n    function computeDeltaXY(session, input) {\n        var center = input.center;\n        var offset = session.offsetDelta || {};\n        var prevDelta = session.prevDelta || {};\n        var prevInput = session.prevInput || {};\n\n        if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n            prevDelta = session.prevDelta = {\n                x: prevInput.deltaX || 0,\n                y: prevInput.deltaY || 0\n            };\n\n            offset = session.offsetDelta = {\n                x: center.x,\n                y: center.y\n            };\n        }\n\n        input.deltaX = prevDelta.x + (center.x - offset.x);\n        input.deltaY = prevDelta.y + (center.y - offset.y);\n    }\n\n    /**\n     * velocity is calculated every x ms\n     * @param {Object} session\n     * @param {Object} input\n     */\n    function computeIntervalInputData(session, input) {\n        var last = session.lastInterval || input,\n            deltaTime = input.timeStamp - last.timeStamp,\n            velocity,\n            velocityX,\n            velocityY,\n            direction;\n\n        if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n            var deltaX = input.deltaX - last.deltaX;\n            var deltaY = input.deltaY - last.deltaY;\n\n            var v = getVelocity(deltaTime, deltaX, deltaY);\n            velocityX = v.x;\n            velocityY = v.y;\n            velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n            direction = getDirection(deltaX, deltaY);\n\n            session.lastInterval = input;\n        } else {\n            // use latest velocity info if it doesn't overtake a minimum period\n            velocity = last.velocity;\n            velocityX = last.velocityX;\n            velocityY = last.velocityY;\n            direction = last.direction;\n        }\n\n        input.velocity = velocity;\n        input.velocityX = velocityX;\n        input.velocityY = velocityY;\n        input.direction = direction;\n    }\n\n    /**\n     * create a simple clone from the input used for storage of firstInput and firstMultiple\n     * @param {Object} input\n     * @returns {Object} clonedInputData\n     */\n    function simpleCloneInputData(input) {\n        // make a simple copy of the pointers because we will get a reference if we don't\n        // we only need clientXY for the calculations\n        var pointers = [];\n        var i = 0;\n        while (i < input.pointers.length) {\n            pointers[i] = {\n                clientX: round(input.pointers[i].clientX),\n                clientY: round(input.pointers[i].clientY)\n            };\n            i++;\n        }\n\n        return {\n            timeStamp: now(),\n            pointers: pointers,\n            center: getCenter(pointers),\n            deltaX: input.deltaX,\n            deltaY: input.deltaY\n        };\n    }\n\n    /**\n     * get the center of all the pointers\n     * @param {Array} pointers\n     * @return {Object} center contains `x` and `y` properties\n     */\n    function getCenter(pointers) {\n        var pointersLength = pointers.length;\n\n        // no need to loop when only one touch\n        if (pointersLength === 1) {\n            return {\n                x: round(pointers[0].clientX),\n                y: round(pointers[0].clientY)\n            };\n        }\n\n        var x = 0,\n            y = 0,\n            i = 0;\n        while (i < pointersLength) {\n            x += pointers[i].clientX;\n            y += pointers[i].clientY;\n            i++;\n        }\n\n        return {\n            x: round(x / pointersLength),\n            y: round(y / pointersLength)\n        };\n    }\n\n    /**\n     * calculate the velocity between two points. unit is in px per ms.\n     * @param {Number} deltaTime\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Object} velocity `x` and `y`\n     */\n    function getVelocity(deltaTime, x, y) {\n        return {\n            x: x / deltaTime || 0,\n            y: y / deltaTime || 0\n        };\n    }\n\n    /**\n     * get the direction between two points\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Number} direction\n     */\n    function getDirection(x, y) {\n        if (x === y) {\n            return DIRECTION_NONE;\n        }\n\n        if (abs(x) >= abs(y)) {\n            return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        }\n        return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n    }\n\n    /**\n     * calculate the absolute distance between two points\n     * @param {Object} p1 {x, y}\n     * @param {Object} p2 {x, y}\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} distance\n     */\n    function getDistance(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n\n        return Math.sqrt(x * x + y * y);\n    }\n\n    /**\n     * calculate the angle between two coordinates\n     * @param {Object} p1\n     * @param {Object} p2\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} angle\n     */\n    function getAngle(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n        return Math.atan2(y, x) * 180 / Math.PI;\n    }\n\n    /**\n     * calculate the rotation degrees between two pointersets\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} rotation\n     */\n    function getRotation(start, end) {\n        return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n    }\n\n    /**\n     * calculate the scale factor between two pointersets\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} scale\n     */\n    function getScale(start, end) {\n        return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n    }\n\n    var MOUSE_INPUT_MAP = {\n        mousedown: INPUT_START,\n        mousemove: INPUT_MOVE,\n        mouseup: INPUT_END\n    };\n\n    var MOUSE_ELEMENT_EVENTS = 'mousedown';\n    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n    /**\n     * Mouse events input\n     * @constructor\n     * @extends Input\n     */\n    function MouseInput() {\n        this.evEl = MOUSE_ELEMENT_EVENTS;\n        this.evWin = MOUSE_WINDOW_EVENTS;\n\n        this.pressed = false; // mousedown state\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(MouseInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function MEhandler(ev) {\n            var eventType = MOUSE_INPUT_MAP[ev.type];\n\n            // on start we want to have the left mouse button down\n            if (eventType & INPUT_START && ev.button === 0) {\n                this.pressed = true;\n            }\n\n            if (eventType & INPUT_MOVE && ev.which !== 1) {\n                eventType = INPUT_END;\n            }\n\n            // mouse must be down\n            if (!this.pressed) {\n                return;\n            }\n\n            if (eventType & INPUT_END) {\n                this.pressed = false;\n            }\n\n            this.callback(this.manager, eventType, {\n                pointers: [ev],\n                changedPointers: [ev],\n                pointerType: INPUT_TYPE_MOUSE,\n                srcEvent: ev\n            });\n        }\n    });\n\n    var POINTER_INPUT_MAP = {\n        pointerdown: INPUT_START,\n        pointermove: INPUT_MOVE,\n        pointerup: INPUT_END,\n        pointercancel: INPUT_CANCEL,\n        pointerout: INPUT_CANCEL\n    };\n\n    // in IE10 the pointer types is defined as an enum\n    var IE10_POINTER_TYPE_ENUM = {\n        2: INPUT_TYPE_TOUCH,\n        3: INPUT_TYPE_PEN,\n        4: INPUT_TYPE_MOUSE,\n        5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n    };\n\n    var POINTER_ELEMENT_EVENTS = 'pointerdown';\n    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n    // IE10 has prefixed support, and case-sensitive\n    if (window.MSPointerEvent && !window.PointerEvent) {\n        POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n        POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n    }\n\n    /**\n     * Pointer events input\n     * @constructor\n     * @extends Input\n     */\n    function PointerEventInput() {\n        this.evEl = POINTER_ELEMENT_EVENTS;\n        this.evWin = POINTER_WINDOW_EVENTS;\n\n        Input.apply(this, arguments);\n\n        this.store = this.manager.session.pointerEvents = [];\n    }\n\n    inherit(PointerEventInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function PEhandler(ev) {\n            var store = this.store;\n            var removePointer = false;\n\n            var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n            var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n            var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n            var isTouch = pointerType == INPUT_TYPE_TOUCH;\n\n            // get index of the event in the store\n            var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n            // start and mouse must be down\n            if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n                if (storeIndex < 0) {\n                    store.push(ev);\n                    storeIndex = store.length - 1;\n                }\n            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n                removePointer = true;\n            }\n\n            // it not found, so the pointer hasn't been down (so it's probably a hover)\n            if (storeIndex < 0) {\n                return;\n            }\n\n            // update the event in the store\n            store[storeIndex] = ev;\n\n            this.callback(this.manager, eventType, {\n                pointers: store,\n                changedPointers: [ev],\n                pointerType: pointerType,\n                srcEvent: ev\n            });\n\n            if (removePointer) {\n                // remove from the store\n                store.splice(storeIndex, 1);\n            }\n        }\n    });\n\n    var SINGLE_TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Touch events input\n     * @constructor\n     * @extends Input\n     */\n    function SingleTouchInput() {\n        this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n        this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n        this.started = false;\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(SingleTouchInput, Input, {\n        handler: function TEhandler(ev) {\n            var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n            // should we handle the touch events?\n            if (type === INPUT_START) {\n                this.started = true;\n            }\n\n            if (!this.started) {\n                return;\n            }\n\n            var touches = normalizeSingleTouches.call(this, ev, type);\n\n            // when done, reset the started state\n            if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n                this.started = false;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function normalizeSingleTouches(ev, type) {\n        var all = toArray(ev.touches);\n        var changed = toArray(ev.changedTouches);\n\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            all = uniqueArray(all.concat(changed), 'identifier', true);\n        }\n\n        return [all, changed];\n    }\n\n    var TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Multi-user touch events input\n     * @constructor\n     * @extends Input\n     */\n    function TouchInput() {\n        this.evTarget = TOUCH_TARGET_EVENTS;\n        this.targetIds = {};\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(TouchInput, Input, {\n        handler: function MTEhandler(ev) {\n            var type = TOUCH_INPUT_MAP[ev.type];\n            var touches = getTouches.call(this, ev, type);\n            if (!touches) {\n                return;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function getTouches(ev, type) {\n        var allTouches = toArray(ev.touches);\n        var targetIds = this.targetIds;\n\n        // when there is only one touch, the process can be simplified\n        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n            targetIds[allTouches[0].identifier] = true;\n            return [allTouches, allTouches];\n        }\n\n        var i,\n            targetTouches,\n            changedTouches = toArray(ev.changedTouches),\n            changedTargetTouches = [],\n            target = this.target;\n\n        // get target touches from touches\n        targetTouches = allTouches.filter(function (touch) {\n            return hasParent(touch.target, target);\n        });\n\n        // collect touches\n        if (type === INPUT_START) {\n            i = 0;\n            while (i < targetTouches.length) {\n                targetIds[targetTouches[i].identifier] = true;\n                i++;\n            }\n        }\n\n        // filter changed touches to only contain touches that exist in the collected target ids\n        i = 0;\n        while (i < changedTouches.length) {\n            if (targetIds[changedTouches[i].identifier]) {\n                changedTargetTouches.push(changedTouches[i]);\n            }\n\n            // cleanup removed touches\n            if (type & (INPUT_END | INPUT_CANCEL)) {\n                delete targetIds[changedTouches[i].identifier];\n            }\n            i++;\n        }\n\n        if (!changedTargetTouches.length) {\n            return;\n        }\n\n        return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n    }\n\n    /**\n     * Combined touch and mouse input\n     *\n     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n     * This because touch devices also emit mouse events while doing a touch.\n     *\n     * @constructor\n     * @extends Input\n     */\n\n    var DEDUP_TIMEOUT = 2500;\n    var DEDUP_DISTANCE = 25;\n\n    function TouchMouseInput() {\n        Input.apply(this, arguments);\n\n        var handler = bindFn(this.handler, this);\n        this.touch = new TouchInput(this.manager, handler);\n        this.mouse = new MouseInput(this.manager, handler);\n\n        this.primaryTouch = null;\n        this.lastTouches = [];\n    }\n\n    inherit(TouchMouseInput, Input, {\n        /**\n         * handle mouse and touch events\n         * @param {Hammer} manager\n         * @param {String} inputEvent\n         * @param {Object} inputData\n         */\n        handler: function TMEhandler(manager, inputEvent, inputData) {\n            var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,\n                isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n\n            if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n                return;\n            }\n\n            // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n            if (isTouch) {\n                recordTouches.call(this, inputEvent, inputData);\n            } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n                return;\n            }\n\n            this.callback(manager, inputEvent, inputData);\n        },\n\n        /**\n         * remove the event listeners\n         */\n        destroy: function destroy() {\n            this.touch.destroy();\n            this.mouse.destroy();\n        }\n    });\n\n    function recordTouches(eventType, eventData) {\n        if (eventType & INPUT_START) {\n            this.primaryTouch = eventData.changedPointers[0].identifier;\n            setLastTouch.call(this, eventData);\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            setLastTouch.call(this, eventData);\n        }\n    }\n\n    function setLastTouch(eventData) {\n        var touch = eventData.changedPointers[0];\n\n        if (touch.identifier === this.primaryTouch) {\n            var lastTouch = { x: touch.clientX, y: touch.clientY };\n            this.lastTouches.push(lastTouch);\n            var lts = this.lastTouches;\n            var removeLastTouch = function removeLastTouch() {\n                var i = lts.indexOf(lastTouch);\n                if (i > -1) {\n                    lts.splice(i, 1);\n                }\n            };\n            setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n        }\n    }\n\n    function isSyntheticEvent(eventData) {\n        var x = eventData.srcEvent.clientX,\n            y = eventData.srcEvent.clientY;\n        for (var i = 0; i < this.lastTouches.length; i++) {\n            var t = this.lastTouches[i];\n            var dx = Math.abs(x - t.x),\n                dy = Math.abs(y - t.y);\n            if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n    // magical touchAction value\n    var TOUCH_ACTION_COMPUTE = 'compute';\n    var TOUCH_ACTION_AUTO = 'auto';\n    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n    var TOUCH_ACTION_NONE = 'none';\n    var TOUCH_ACTION_PAN_X = 'pan-x';\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\n    var TOUCH_ACTION_MAP = getTouchActionProps();\n\n    /**\n     * Touch Action\n     * sets the touchAction property or uses the js alternative\n     * @param {Manager} manager\n     * @param {String} value\n     * @constructor\n     */\n    function TouchAction(manager, value) {\n        this.manager = manager;\n        this.set(value);\n    }\n\n    TouchAction.prototype = {\n        /**\n         * set the touchAction value on the element or enable the polyfill\n         * @param {String} value\n         */\n        set: function set(value) {\n            // find out the touch-action by the event handlers\n            if (value == TOUCH_ACTION_COMPUTE) {\n                value = this.compute();\n            }\n\n            if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n                this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n            }\n            this.actions = value.toLowerCase().trim();\n        },\n\n        /**\n         * just re-set the touchAction value\n         */\n        update: function update() {\n            this.set(this.manager.options.touchAction);\n        },\n\n        /**\n         * compute the value for the touchAction property based on the recognizer's settings\n         * @returns {String} value\n         */\n        compute: function compute() {\n            var actions = [];\n            each(this.manager.recognizers, function (recognizer) {\n                if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                    actions = actions.concat(recognizer.getTouchAction());\n                }\n            });\n            return cleanTouchActions(actions.join(' '));\n        },\n\n        /**\n         * this method is called on each input cycle and provides the preventing of the browser behavior\n         * @param {Object} input\n         */\n        preventDefaults: function preventDefaults(input) {\n            var srcEvent = input.srcEvent;\n            var direction = input.offsetDirection;\n\n            // if the touch action did prevented once this session\n            if (this.manager.session.prevented) {\n                srcEvent.preventDefault();\n                return;\n            }\n\n            var actions = this.actions;\n            var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n            if (hasNone) {\n                //do not prevent defaults if this is a tap gesture\n\n                var isTapPointer = input.pointers.length === 1;\n                var isTapMovement = input.distance < 2;\n                var isTapTouchTime = input.deltaTime < 250;\n\n                if (isTapPointer && isTapMovement && isTapTouchTime) {\n                    return;\n                }\n            }\n\n            if (hasPanX && hasPanY) {\n                // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n                return;\n            }\n\n            if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n                return this.preventSrc(srcEvent);\n            }\n        },\n\n        /**\n         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n         * @param {Object} srcEvent\n         */\n        preventSrc: function preventSrc(srcEvent) {\n            this.manager.session.prevented = true;\n            srcEvent.preventDefault();\n        }\n    };\n\n    /**\n     * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n     * @param {String} actions\n     * @returns {*}\n     */\n    function cleanTouchActions(actions) {\n        // none\n        if (inStr(actions, TOUCH_ACTION_NONE)) {\n            return TOUCH_ACTION_NONE;\n        }\n\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n        // if both pan-x and pan-y are set (different recognizers\n        // for different directions, e.g. horizontal pan but vertical swipe?)\n        // we need none (as otherwise with pan-x pan-y combined none of these\n        // recognizers will work, since the browser would handle all panning\n        if (hasPanX && hasPanY) {\n            return TOUCH_ACTION_NONE;\n        }\n\n        // pan-x OR pan-y\n        if (hasPanX || hasPanY) {\n            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n        }\n\n        // manipulation\n        if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n            return TOUCH_ACTION_MANIPULATION;\n        }\n\n        return TOUCH_ACTION_AUTO;\n    }\n\n    function getTouchActionProps() {\n        if (!NATIVE_TOUCH_ACTION) {\n            return false;\n        }\n        var touchMap = {};\n        var cssSupports = window.CSS && window.CSS.supports;\n        ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n\n            // If css.supports is not supported but there is native touch-action assume it supports\n            // all values. This is the case for IE 10 and 11.\n            touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n        });\n        return touchMap;\n    }\n\n    /**\n     * Recognizer flow explained; *\n     * All recognizers have the initial state of POSSIBLE when a input session starts.\n     * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n     * Example session for mouse-input: mousedown -> mousemove -> mouseup\n     *\n     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n     * which determines with state it should be.\n     *\n     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n     * POSSIBLE to give it another change on the next cycle.\n     *\n     *               Possible\n     *                  |\n     *            +-----+---------------+\n     *            |                     |\n     *      +-----+-----+               |\n     *      |           |               |\n     *   Failed      Cancelled          |\n     *                          +-------+------+\n     *                          |              |\n     *                      Recognized       Began\n     *                                         |\n     *                                      Changed\n     *                                         |\n     *                                  Ended/Recognized\n     */\n    var STATE_POSSIBLE = 1;\n    var STATE_BEGAN = 2;\n    var STATE_CHANGED = 4;\n    var STATE_ENDED = 8;\n    var STATE_RECOGNIZED = STATE_ENDED;\n    var STATE_CANCELLED = 16;\n    var STATE_FAILED = 32;\n\n    /**\n     * Recognizer\n     * Every recognizer needs to extend from this class.\n     * @constructor\n     * @param {Object} options\n     */\n    function Recognizer(options) {\n        this.options = assign({}, this.defaults, options || {});\n\n        this.id = uniqueId();\n\n        this.manager = null;\n\n        // default is enable true\n        this.options.enable = ifUndefined(this.options.enable, true);\n\n        this.state = STATE_POSSIBLE;\n\n        this.simultaneous = {};\n        this.requireFail = [];\n    }\n\n    Recognizer.prototype = {\n        /**\n         * @virtual\n         * @type {Object}\n         */\n        defaults: {},\n\n        /**\n         * set options\n         * @param {Object} options\n         * @return {Recognizer}\n         */\n        set: function set(options) {\n            assign(this.options, options);\n\n            // also update the touchAction, in case something changed about the directions/enabled state\n            this.manager && this.manager.touchAction.update();\n            return this;\n        },\n\n        /**\n         * recognize simultaneous with an other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        recognizeWith: function recognizeWith(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n                return this;\n            }\n\n            var simultaneous = this.simultaneous;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (!simultaneous[otherRecognizer.id]) {\n                simultaneous[otherRecognizer.id] = otherRecognizer;\n                otherRecognizer.recognizeWith(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            delete this.simultaneous[otherRecognizer.id];\n            return this;\n        },\n\n        /**\n         * recognizer can only run when an other is failing\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        requireFailure: function requireFailure(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n                return this;\n            }\n\n            var requireFail = this.requireFail;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (inArray(requireFail, otherRecognizer) === -1) {\n                requireFail.push(otherRecognizer);\n                otherRecognizer.requireFailure(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the requireFailure link. it does not remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRequireFailure: function dropRequireFailure(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            var index = inArray(this.requireFail, otherRecognizer);\n            if (index > -1) {\n                this.requireFail.splice(index, 1);\n            }\n            return this;\n        },\n\n        /**\n         * has require failures boolean\n         * @returns {boolean}\n         */\n        hasRequireFailures: function hasRequireFailures() {\n            return this.requireFail.length > 0;\n        },\n\n        /**\n         * if the recognizer can recognize simultaneous with an other recognizer\n         * @param {Recognizer} otherRecognizer\n         * @returns {Boolean}\n         */\n        canRecognizeWith: function canRecognizeWith(otherRecognizer) {\n            return !!this.simultaneous[otherRecognizer.id];\n        },\n\n        /**\n         * You should use `tryEmit` instead of `emit` directly to check\n         * that all the needed recognizers has failed before emitting.\n         * @param {Object} input\n         */\n        emit: function emit(input) {\n            var self = this;\n            var state = this.state;\n\n            function emit(event) {\n                self.manager.emit(event, input);\n            }\n\n            // 'panstart' and 'panmove'\n            if (state < STATE_ENDED) {\n                emit(self.options.event + stateStr(state));\n            }\n\n            emit(self.options.event); // simple 'eventName' events\n\n            if (input.additionalEvent) {\n                // additional event(panleft, panright, pinchin, pinchout...)\n                emit(input.additionalEvent);\n            }\n\n            // panend and pancancel\n            if (state >= STATE_ENDED) {\n                emit(self.options.event + stateStr(state));\n            }\n        },\n\n        /**\n         * Check that all the require failure recognizers has failed,\n         * if true, it emits a gesture event,\n         * otherwise, setup the state to FAILED.\n         * @param {Object} input\n         */\n        tryEmit: function tryEmit(input) {\n            if (this.canEmit()) {\n                return this.emit(input);\n            }\n            // it's failing anyway\n            this.state = STATE_FAILED;\n        },\n\n        /**\n         * can we emit?\n         * @returns {boolean}\n         */\n        canEmit: function canEmit() {\n            var i = 0;\n            while (i < this.requireFail.length) {\n                if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                    return false;\n                }\n                i++;\n            }\n            return true;\n        },\n\n        /**\n         * update the recognizer\n         * @param {Object} inputData\n         */\n        recognize: function recognize(inputData) {\n            // make a new copy of the inputData\n            // so we can change the inputData without messing up the other recognizers\n            var inputDataClone = assign({}, inputData);\n\n            // is is enabled and allow recognizing?\n            if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n                this.reset();\n                this.state = STATE_FAILED;\n                return;\n            }\n\n            // reset when we've reached the end\n            if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n                this.state = STATE_POSSIBLE;\n            }\n\n            this.state = this.process(inputDataClone);\n\n            // the recognizer has recognized a gesture\n            // so trigger an event\n            if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n                this.tryEmit(inputDataClone);\n            }\n        },\n\n        /**\n         * return the state of the recognizer\n         * the actual recognizing happens in this method\n         * @virtual\n         * @param {Object} inputData\n         * @returns {Const} STATE\n         */\n        process: function process(inputData) {}, // jshint ignore:line\n\n        /**\n         * return the preferred touch-action\n         * @virtual\n         * @returns {Array}\n         */\n        getTouchAction: function getTouchAction() {},\n\n        /**\n         * called when the gesture isn't allowed to recognize\n         * like when another is being recognized or it is disabled\n         * @virtual\n         */\n        reset: function reset() {}\n    };\n\n    /**\n     * get a usable string, used as event postfix\n     * @param {Const} state\n     * @returns {String} state\n     */\n    function stateStr(state) {\n        if (state & STATE_CANCELLED) {\n            return 'cancel';\n        } else if (state & STATE_ENDED) {\n            return 'end';\n        } else if (state & STATE_CHANGED) {\n            return 'move';\n        } else if (state & STATE_BEGAN) {\n            return 'start';\n        }\n        return '';\n    }\n\n    /**\n     * direction cons to string\n     * @param {Const} direction\n     * @returns {String}\n     */\n    function directionStr(direction) {\n        if (direction == DIRECTION_DOWN) {\n            return 'down';\n        } else if (direction == DIRECTION_UP) {\n            return 'up';\n        } else if (direction == DIRECTION_LEFT) {\n            return 'left';\n        } else if (direction == DIRECTION_RIGHT) {\n            return 'right';\n        }\n        return '';\n    }\n\n    /**\n     * get a recognizer by name if it is bound to a manager\n     * @param {Recognizer|String} otherRecognizer\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer}\n     */\n    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n        var manager = recognizer.manager;\n        if (manager) {\n            return manager.get(otherRecognizer);\n        }\n        return otherRecognizer;\n    }\n\n    /**\n     * This recognizer is just used as a base for the simple attribute recognizers.\n     * @constructor\n     * @extends Recognizer\n     */\n    function AttrRecognizer() {\n        Recognizer.apply(this, arguments);\n    }\n\n    inherit(AttrRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof AttrRecognizer\n         */\n        defaults: {\n            /**\n             * @type {Number}\n             * @default 1\n             */\n            pointers: 1\n        },\n\n        /**\n         * Used to check if it the recognizer receives valid input, like input.distance > 10.\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {Boolean} recognized\n         */\n        attrTest: function attrTest(input) {\n            var optionPointers = this.options.pointers;\n            return optionPointers === 0 || input.pointers.length === optionPointers;\n        },\n\n        /**\n         * Process the input and return the state for the recognizer\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {*} State\n         */\n        process: function process(input) {\n            var state = this.state;\n            var eventType = input.eventType;\n\n            var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n            var isValid = this.attrTest(input);\n\n            // on cancel input and we've recognized before, return STATE_CANCELLED\n            if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n                return state | STATE_CANCELLED;\n            } else if (isRecognized || isValid) {\n                if (eventType & INPUT_END) {\n                    return state | STATE_ENDED;\n                } else if (!(state & STATE_BEGAN)) {\n                    return STATE_BEGAN;\n                }\n                return state | STATE_CHANGED;\n            }\n            return STATE_FAILED;\n        }\n    });\n\n    /**\n     * Pan\n     * Recognized when the pointer is down and moved in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PanRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n\n        this.pX = null;\n        this.pY = null;\n    }\n\n    inherit(PanRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PanRecognizer\n         */\n        defaults: {\n            event: 'pan',\n            threshold: 10,\n            pointers: 1,\n            direction: DIRECTION_ALL\n        },\n\n        getTouchAction: function getTouchAction() {\n            var direction = this.options.direction;\n            var actions = [];\n            if (direction & DIRECTION_HORIZONTAL) {\n                actions.push(TOUCH_ACTION_PAN_Y);\n            }\n            if (direction & DIRECTION_VERTICAL) {\n                actions.push(TOUCH_ACTION_PAN_X);\n            }\n            return actions;\n        },\n\n        directionTest: function directionTest(input) {\n            var options = this.options;\n            var hasMoved = true;\n            var distance = input.distance;\n            var direction = input.direction;\n            var x = input.deltaX;\n            var y = input.deltaY;\n\n            // lock to axis?\n            if (!(direction & options.direction)) {\n                if (options.direction & DIRECTION_HORIZONTAL) {\n                    direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                    hasMoved = x != this.pX;\n                    distance = Math.abs(input.deltaX);\n                } else {\n                    direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n                    hasMoved = y != this.pY;\n                    distance = Math.abs(input.deltaY);\n                }\n            }\n            input.direction = direction;\n            return hasMoved && distance > options.threshold && direction & options.direction;\n        },\n\n        attrTest: function attrTest(input) {\n            return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n        },\n\n        emit: function emit(input) {\n\n            this.pX = input.deltaX;\n            this.pY = input.deltaY;\n\n            var direction = directionStr(input.direction);\n\n            if (direction) {\n                input.additionalEvent = this.options.event + direction;\n            }\n            this._super.emit.call(this, input);\n        }\n    });\n\n    /**\n     * Pinch\n     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PinchRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(PinchRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'pinch',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function attrTest(input) {\n            return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n        },\n\n        emit: function emit(input) {\n            if (input.scale !== 1) {\n                var inOut = input.scale < 1 ? 'in' : 'out';\n                input.additionalEvent = this.options.event + inOut;\n            }\n            this._super.emit.call(this, input);\n        }\n    });\n\n    /**\n     * Press\n     * Recognized when the pointer is down for x ms without any movement.\n     * @constructor\n     * @extends Recognizer\n     */\n    function PressRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        this._timer = null;\n        this._input = null;\n    }\n\n    inherit(PressRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PressRecognizer\n         */\n        defaults: {\n            event: 'press',\n            pointers: 1,\n            time: 251, // minimal time of the pointer to be pressed\n            threshold: 9 // a minimal movement is ok, but keep it low\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_AUTO];\n        },\n\n        process: function process(input) {\n            var options = this.options;\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTime = input.deltaTime > options.time;\n\n            this._input = input;\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n                this.reset();\n            } else if (input.eventType & INPUT_START) {\n                this.reset();\n                this._timer = setTimeoutContext(function () {\n                    this.state = STATE_RECOGNIZED;\n                    this.tryEmit();\n                }, options.time, this);\n            } else if (input.eventType & INPUT_END) {\n                return STATE_RECOGNIZED;\n            }\n            return STATE_FAILED;\n        },\n\n        reset: function reset() {\n            clearTimeout(this._timer);\n        },\n\n        emit: function emit(input) {\n            if (this.state !== STATE_RECOGNIZED) {\n                return;\n            }\n\n            if (input && input.eventType & INPUT_END) {\n                this.manager.emit(this.options.event + 'up', input);\n            } else {\n                this._input.timeStamp = now();\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Rotate\n     * Recognized when two or more pointer are moving in a circular motion.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function RotateRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(RotateRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof RotateRecognizer\n         */\n        defaults: {\n            event: 'rotate',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function attrTest(input) {\n            return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n        }\n    });\n\n    /**\n     * Swipe\n     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function SwipeRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(SwipeRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof SwipeRecognizer\n         */\n        defaults: {\n            event: 'swipe',\n            threshold: 10,\n            velocity: 0.3,\n            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n            pointers: 1\n        },\n\n        getTouchAction: function getTouchAction() {\n            return PanRecognizer.prototype.getTouchAction.call(this);\n        },\n\n        attrTest: function attrTest(input) {\n            var direction = this.options.direction;\n            var velocity;\n\n            if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n                velocity = input.overallVelocity;\n            } else if (direction & DIRECTION_HORIZONTAL) {\n                velocity = input.overallVelocityX;\n            } else if (direction & DIRECTION_VERTICAL) {\n                velocity = input.overallVelocityY;\n            }\n\n            return this._super.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers == this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n        },\n\n        emit: function emit(input) {\n            var direction = directionStr(input.offsetDirection);\n            if (direction) {\n                this.manager.emit(this.options.event + direction, input);\n            }\n\n            this.manager.emit(this.options.event, input);\n        }\n    });\n\n    /**\n     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n     * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n     * a single tap.\n     *\n     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n     * multi-taps being recognized.\n     * @constructor\n     * @extends Recognizer\n     */\n    function TapRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        // previous time and center,\n        // used for tap counting\n        this.pTime = false;\n        this.pCenter = false;\n\n        this._timer = null;\n        this._input = null;\n        this.count = 0;\n    }\n\n    inherit(TapRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'tap',\n            pointers: 1,\n            taps: 1,\n            interval: 300, // max time between the multi-tap taps\n            time: 250, // max time of the pointer to be down (like finger on the screen)\n            threshold: 9, // a minimal movement is ok, but keep it low\n            posThreshold: 10 // a multi-tap can be a bit off the initial position\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_MANIPULATION];\n        },\n\n        process: function process(input) {\n            var options = this.options;\n\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTouchTime = input.deltaTime < options.time;\n\n            this.reset();\n\n            if (input.eventType & INPUT_START && this.count === 0) {\n                return this.failTimeout();\n            }\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (validMovement && validTouchTime && validPointers) {\n                if (input.eventType != INPUT_END) {\n                    return this.failTimeout();\n                }\n\n                var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n                var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n                this.pTime = input.timeStamp;\n                this.pCenter = input.center;\n\n                if (!validMultiTap || !validInterval) {\n                    this.count = 1;\n                } else {\n                    this.count += 1;\n                }\n\n                this._input = input;\n\n                // if tap count matches we have recognized it,\n                // else it has began recognizing...\n                var tapCount = this.count % options.taps;\n                if (tapCount === 0) {\n                    // no failing requirements, immediately trigger the tap event\n                    // or wait as long as the multitap interval to trigger\n                    if (!this.hasRequireFailures()) {\n                        return STATE_RECOGNIZED;\n                    } else {\n                        this._timer = setTimeoutContext(function () {\n                            this.state = STATE_RECOGNIZED;\n                            this.tryEmit();\n                        }, options.interval, this);\n                        return STATE_BEGAN;\n                    }\n                }\n            }\n            return STATE_FAILED;\n        },\n\n        failTimeout: function failTimeout() {\n            this._timer = setTimeoutContext(function () {\n                this.state = STATE_FAILED;\n            }, this.options.interval, this);\n            return STATE_FAILED;\n        },\n\n        reset: function reset() {\n            clearTimeout(this._timer);\n        },\n\n        emit: function emit() {\n            if (this.state == STATE_RECOGNIZED) {\n                this._input.tapCount = this.count;\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Simple way to create a manager with a default set of recognizers.\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Hammer(element, options) {\n        options = options || {};\n        options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n        return new Manager(element, options);\n    }\n\n    /**\n     * @const {string}\n     */\n    Hammer.VERSION = '2.0.8';\n\n    /**\n     * default settings\n     * @namespace\n     */\n    Hammer.defaults = {\n        /**\n         * set if DOM events are being triggered.\n         * But this is slower and unused by simple implementations, so disabled by default.\n         * @type {Boolean}\n         * @default false\n         */\n        domEvents: false,\n\n        /**\n         * The value for the touchAction property/fallback.\n         * When set to `compute` it will magically set the correct value based on the added recognizers.\n         * @type {String}\n         * @default compute\n         */\n        touchAction: TOUCH_ACTION_COMPUTE,\n\n        /**\n         * @type {Boolean}\n         * @default true\n         */\n        enable: true,\n\n        /**\n         * EXPERIMENTAL FEATURE -- can be removed/changed\n         * Change the parent input target element.\n         * If Null, then it is being set the to main element.\n         * @type {Null|EventTarget}\n         * @default null\n         */\n        inputTarget: null,\n\n        /**\n         * force an input class\n         * @type {Null|Function}\n         * @default null\n         */\n        inputClass: null,\n\n        /**\n         * Default recognizer setup when calling `Hammer()`\n         * When creating a new Manager these will be skipped.\n         * @type {Array}\n         */\n        preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, { enable: false }], [PinchRecognizer, { enable: false }, ['rotate']], [SwipeRecognizer, { direction: DIRECTION_HORIZONTAL }], [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']], [TapRecognizer], [TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']], [PressRecognizer]],\n\n        /**\n         * Some CSS properties can be used to improve the working of Hammer.\n         * Add them to this method and they will be set when creating a new Manager.\n         * @namespace\n         */\n        cssProps: {\n            /**\n             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userSelect: 'none',\n\n            /**\n             * Disable the Windows Phone grippers when pressing an element.\n             * @type {String}\n             * @default 'none'\n             */\n            touchSelect: 'none',\n\n            /**\n             * Disables the default callout shown when you touch and hold a touch target.\n             * On iOS, when you touch and hold a touch target such as a link, Safari displays\n             * a callout containing information about the link. This property allows you to disable that callout.\n             * @type {String}\n             * @default 'none'\n             */\n            touchCallout: 'none',\n\n            /**\n             * Specifies whether zooming is enabled. Used by IE10>\n             * @type {String}\n             * @default 'none'\n             */\n            contentZooming: 'none',\n\n            /**\n             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userDrag: 'none',\n\n            /**\n             * Overrides the highlight color shown when the user taps a link or a JavaScript\n             * clickable element in iOS. This property obeys the alpha value, if specified.\n             * @type {String}\n             * @default 'rgba(0,0,0,0)'\n             */\n            tapHighlightColor: 'rgba(0,0,0,0)'\n        }\n    };\n\n    var STOP = 1;\n    var FORCED_STOP = 2;\n\n    /**\n     * Manager\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Manager(element, options) {\n        this.options = assign({}, Hammer.defaults, options || {});\n\n        this.options.inputTarget = this.options.inputTarget || element;\n\n        this.handlers = {};\n        this.session = {};\n        this.recognizers = [];\n        this.oldCssProps = {};\n\n        this.element = element;\n        this.input = createInputInstance(this);\n        this.touchAction = new TouchAction(this, this.options.touchAction);\n\n        toggleCssProps(this, true);\n\n        each(this.options.recognizers, function (item) {\n            var recognizer = this.add(new item[0](item[1]));\n            item[2] && recognizer.recognizeWith(item[2]);\n            item[3] && recognizer.requireFailure(item[3]);\n        }, this);\n    }\n\n    Manager.prototype = {\n        /**\n         * set options\n         * @param {Object} options\n         * @returns {Manager}\n         */\n        set: function set(options) {\n            assign(this.options, options);\n\n            // Options that need a little more setup\n            if (options.touchAction) {\n                this.touchAction.update();\n            }\n            if (options.inputTarget) {\n                // Clean up existing event listeners and reinitialize\n                this.input.destroy();\n                this.input.target = options.inputTarget;\n                this.input.init();\n            }\n            return this;\n        },\n\n        /**\n         * stop recognizing for this session.\n         * This session will be discarded, when a new [input]start event is fired.\n         * When forced, the recognizer cycle is stopped immediately.\n         * @param {Boolean} [force]\n         */\n        stop: function stop(force) {\n            this.session.stopped = force ? FORCED_STOP : STOP;\n        },\n\n        /**\n         * run the recognizers!\n         * called by the inputHandler function on every movement of the pointers (touches)\n         * it walks through all the recognizers and tries to detect the gesture that is being made\n         * @param {Object} inputData\n         */\n        recognize: function recognize(inputData) {\n            var session = this.session;\n            if (session.stopped) {\n                return;\n            }\n\n            // run the touch-action polyfill\n            this.touchAction.preventDefaults(inputData);\n\n            var recognizer;\n            var recognizers = this.recognizers;\n\n            // this holds the recognizer that is being recognized.\n            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n            // if no recognizer is detecting a thing, it is set to `null`\n            var curRecognizer = session.curRecognizer;\n\n            // reset when the last recognizer is recognized\n            // or when we're in a new session\n            if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n                curRecognizer = session.curRecognizer = null;\n            }\n\n            var i = 0;\n            while (i < recognizers.length) {\n                recognizer = recognizers[i];\n\n                // find out if we are allowed try to recognize the input for this one.\n                // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n                // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n                //      that is being recognized.\n                // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n                //      this can be setup with the `recognizeWith()` method on the recognizer.\n                if (session.stopped !== FORCED_STOP && ( // 1\n                !curRecognizer || recognizer == curRecognizer || // 2\n                recognizer.canRecognizeWith(curRecognizer))) {\n                    // 3\n                    recognizer.recognize(inputData);\n                } else {\n                    recognizer.reset();\n                }\n\n                // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n                // current active recognizer. but only if we don't already have an active recognizer\n                if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                    curRecognizer = session.curRecognizer = recognizer;\n                }\n                i++;\n            }\n        },\n\n        /**\n         * get a recognizer by its event name.\n         * @param {Recognizer|String} recognizer\n         * @returns {Recognizer|Null}\n         */\n        get: function get(recognizer) {\n            if (recognizer instanceof Recognizer) {\n                return recognizer;\n            }\n\n            var recognizers = this.recognizers;\n            for (var i = 0; i < recognizers.length; i++) {\n                if (recognizers[i].options.event == recognizer) {\n                    return recognizers[i];\n                }\n            }\n            return null;\n        },\n\n        /**\n         * add a recognizer to the manager\n         * existing recognizers with the same event name will be removed\n         * @param {Recognizer} recognizer\n         * @returns {Recognizer|Manager}\n         */\n        add: function add(recognizer) {\n            if (invokeArrayArg(recognizer, 'add', this)) {\n                return this;\n            }\n\n            // remove existing\n            var existing = this.get(recognizer.options.event);\n            if (existing) {\n                this.remove(existing);\n            }\n\n            this.recognizers.push(recognizer);\n            recognizer.manager = this;\n\n            this.touchAction.update();\n            return recognizer;\n        },\n\n        /**\n         * remove a recognizer by name or instance\n         * @param {Recognizer|String} recognizer\n         * @returns {Manager}\n         */\n        remove: function remove(recognizer) {\n            if (invokeArrayArg(recognizer, 'remove', this)) {\n                return this;\n            }\n\n            recognizer = this.get(recognizer);\n\n            // let's make sure this recognizer exists\n            if (recognizer) {\n                var recognizers = this.recognizers;\n                var index = inArray(recognizers, recognizer);\n\n                if (index !== -1) {\n                    recognizers.splice(index, 1);\n                    this.touchAction.update();\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * bind event\n         * @param {String} events\n         * @param {Function} handler\n         * @returns {EventEmitter} this\n         */\n        on: function on(events, handler) {\n            if (events === undefined) {\n                return;\n            }\n            if (handler === undefined) {\n                return;\n            }\n\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                handlers[event] = handlers[event] || [];\n                handlers[event].push(handler);\n            });\n            return this;\n        },\n\n        /**\n         * unbind event, leave emit blank to remove all handlers\n         * @param {String} events\n         * @param {Function} [handler]\n         * @returns {EventEmitter} this\n         */\n        off: function off(events, handler) {\n            if (events === undefined) {\n                return;\n            }\n\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                if (!handler) {\n                    delete handlers[event];\n                } else {\n                    handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n                }\n            });\n            return this;\n        },\n\n        /**\n         * emit event to the listeners\n         * @param {String} event\n         * @param {Object} data\n         */\n        emit: function emit(event, data) {\n            // we also want to trigger dom events\n            if (this.options.domEvents) {\n                triggerDomEvent(event, data);\n            }\n\n            // no handlers, so skip it all\n            var handlers = this.handlers[event] && this.handlers[event].slice();\n            if (!handlers || !handlers.length) {\n                return;\n            }\n\n            data.type = event;\n            data.preventDefault = function () {\n                data.srcEvent.preventDefault();\n            };\n\n            var i = 0;\n            while (i < handlers.length) {\n                handlers[i](data);\n                i++;\n            }\n        },\n\n        /**\n         * destroy the manager and unbinds all events\n         * it doesn't unbind dom events, that is the user own responsibility\n         */\n        destroy: function destroy() {\n            this.element && toggleCssProps(this, false);\n\n            this.handlers = {};\n            this.session = {};\n            this.input.destroy();\n            this.element = null;\n        }\n    };\n\n    /**\n     * add/remove the css properties as defined in manager.options.cssProps\n     * @param {Manager} manager\n     * @param {Boolean} add\n     */\n    function toggleCssProps(manager, add) {\n        var element = manager.element;\n        if (!element.style) {\n            return;\n        }\n        var prop;\n        each(manager.options.cssProps, function (value, name) {\n            prop = prefixed(element.style, name);\n            if (add) {\n                manager.oldCssProps[prop] = element.style[prop];\n                element.style[prop] = value;\n            } else {\n                element.style[prop] = manager.oldCssProps[prop] || '';\n            }\n        });\n        if (!add) {\n            manager.oldCssProps = {};\n        }\n    }\n\n    /**\n     * trigger dom event\n     * @param {String} event\n     * @param {Object} data\n     */\n    function triggerDomEvent(event, data) {\n        var gestureEvent = document.createEvent('Event');\n        gestureEvent.initEvent(event, true, true);\n        gestureEvent.gesture = data;\n        data.target.dispatchEvent(gestureEvent);\n    }\n\n    assign(Hammer, {\n        INPUT_START: INPUT_START,\n        INPUT_MOVE: INPUT_MOVE,\n        INPUT_END: INPUT_END,\n        INPUT_CANCEL: INPUT_CANCEL,\n\n        STATE_POSSIBLE: STATE_POSSIBLE,\n        STATE_BEGAN: STATE_BEGAN,\n        STATE_CHANGED: STATE_CHANGED,\n        STATE_ENDED: STATE_ENDED,\n        STATE_RECOGNIZED: STATE_RECOGNIZED,\n        STATE_CANCELLED: STATE_CANCELLED,\n        STATE_FAILED: STATE_FAILED,\n\n        DIRECTION_NONE: DIRECTION_NONE,\n        DIRECTION_LEFT: DIRECTION_LEFT,\n        DIRECTION_RIGHT: DIRECTION_RIGHT,\n        DIRECTION_UP: DIRECTION_UP,\n        DIRECTION_DOWN: DIRECTION_DOWN,\n        DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n        DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n        DIRECTION_ALL: DIRECTION_ALL,\n\n        Manager: Manager,\n        Input: Input,\n        TouchAction: TouchAction,\n\n        TouchInput: TouchInput,\n        MouseInput: MouseInput,\n        PointerEventInput: PointerEventInput,\n        TouchMouseInput: TouchMouseInput,\n        SingleTouchInput: SingleTouchInput,\n\n        Recognizer: Recognizer,\n        AttrRecognizer: AttrRecognizer,\n        Tap: TapRecognizer,\n        Pan: PanRecognizer,\n        Swipe: SwipeRecognizer,\n        Pinch: PinchRecognizer,\n        Rotate: RotateRecognizer,\n        Press: PressRecognizer,\n\n        on: addEventListeners,\n        off: removeEventListeners,\n        each: each,\n        merge: merge,\n        extend: extend,\n        assign: assign,\n        inherit: inherit,\n        bindFn: bindFn,\n        prefixed: prefixed\n    });\n\n    // this prevents errors when Hammer is loaded in the presence of an AMD\n    //  style loader but by script tag, not by the loader.\n    var freeGlobal = typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}; // jshint ignore:line\n    freeGlobal.Hammer = Hammer;\n\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return Hammer;\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module != 'undefined' && module.exports) {\n        module.exports = Hammer;\n    } else {\n        window[exportName] = Hammer;\n    }\n})(window, document, 'Hammer');\n\nexports.default = window.Hammer;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _imageViewer = __webpack_require__(5);\n\nvar _imageViewer2 = _interopRequireDefault(_imageViewer);\n\nvar _index = __webpack_require__(9);\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.ImageViewer = _imageViewer2.default;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _debug = __webpack_require__(6);\n\nvar _dom = __webpack_require__(0);\n\nvar _profile = __webpack_require__(1);\n\nvar _lock = __webpack_require__(2);\n\nvar _lock2 = _interopRequireDefault(_lock);\n\nvar _hammer = __webpack_require__(3);\n\nvar _hammer2 = _interopRequireDefault(_hammer);\n\nvar _viewer = __webpack_require__(7);\n\nvar _viewer2 = _interopRequireDefault(_viewer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ImageViewer = function () {\n    function ImageViewer() {\n        var images = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, ImageViewer);\n\n        this.opt = opt;\n        this.el = null;\n        this.headerEl = null;\n        this.bodyEl = null;\n        this.footerEl = null;\n        this.currentNumberEl = null;\n        this.totalNumberEl = null;\n        this.images = images; //图片数据\n        this.imagesLength = images.length; //图片数据\n        this.container = opt.container || 'body';\n        this.enableScale = opt.enableScale === undefined ? true : opt.enableScale; //是否开启图片缩放功能\n        this.currentIndex = opt.startIndex || 0; //起始坐标，从0开始\n        this.viewers = [];\n        this.scaleStart = 1;\n        this.width = 0;\n        this.height = 0;\n        this.itemList = []; //各个图片容器元素的dom节点\n        this.hammer = null;\n        this.deltaX = 0;\n        this.translateX = 0;\n    }\n\n    _createClass(ImageViewer, [{\n        key: '_create',\n        value: function _create() {\n            this.el = (0, _dom.query)('.image-viewer')[0];\n            this.destroy();\n            var imageViewerTemplate = '<div class=\"image-viewer\">\\n                <div class=\"image-header\"></div>\\n                <div class=\"image-body\">\\n                    <div class=\"viewer\"><div class=\"panel\"><img></div></div>\\n                    <div class=\"viewer\"><div class=\"panel\"><img></div></div>\\n                    <div class=\"viewer\"><div class=\"panel\"><img></div></div>\\n                </div>\\n                <div class=\"image-footer\"></div>\\n            </div>';\n\n            var divEl = document.createElement('div');\n            divEl.innerHTML = imageViewerTemplate;\n            this.el = divEl.firstElementChild;\n            (0, _dom.query)(this.container)[0].appendChild(this.el);\n            this.headerEl = (0, _dom.query)('.image-header', this.el)[0];\n            this.bodyEl = (0, _dom.query)('.image-body', this.el)[0];\n            this.footerEl = (0, _dom.query)('.image-footer', this.el)[0];\n            this.itemList = (0, _dom.query)('.image-body', this.el)[0].children;\n            this.width = this.el.clientWidth;\n            this.height = this.el.clientHeight;\n\n            if (this.opt.headerRender) {\n                this.headerEl.innerHTML = this.opt.headerRender();\n            }\n            if (this.opt.footerRender) {\n                this.footerEl.innerHTML = this.opt.footerRender();\n            }\n            this.currentNumberEl = (0, _dom.query)('.number-current', this.el)[0]; //当前滑动所在的图片下标的元素节点\n            this.totalNumberEl = (0, _dom.query)('.number-total', this.el)[0]; //图片总数的元素节点\n        }\n    }, {\n        key: '_init',\n        value: function _init() {\n            this.viewers = [];\n            for (var i = 0, length = this.itemList.length, item; i < length; i++) {\n                item = this.itemList[i];\n                this.viewers.push(new _viewer2.default(this, item, this.width, this.height, i));\n            }\n            this.swipeInByIndex(this.currentIndex);\n            _lock2.default.createLock(_profile.LOCK_NAME);\n        }\n    }, {\n        key: '_updateCountElement',\n        value: function _updateCountElement() {\n            if (this.currentNumberEl) {\n                this.currentNumberEl.innerText = this.currentIndex + 1;\n            }\n            if (this.totalNumberEl) {\n                this.totalNumberEl.innerText = this.imagesLength;\n            }\n        }\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            var mc = new _hammer2.default.Manager(this.el);\n            var hPinch = new _hammer2.default.Pinch(),\n                //前缀h代表hammer\n            hPan = new _hammer2.default.Pan({ direction: _hammer2.default.DIRECTION_HORIZONTAL }),\n                hTap = new _hammer2.default.Tap({ taps: 2 });\n            mc.add([hPinch, hPan, hTap]);\n            mc.on('panstart', this._dealWithMoveActionStart.bind(this));\n            mc.on('panmove', this._dealWithMoveAction.bind(this));\n            mc.on('panend', this._dealWithMoveActionEnd.bind(this));\n            if (this.enableScale) {\n                mc.on('tap', this.reset.bind(this));\n                mc.on('pinchstart', this._dealWithScaleActionStart.bind(this));\n                mc.on('pinch', this._dealWithScaleAction.bind(this));\n                mc.on('pinchend', this._dealWithScaleActionEnd.bind(this));\n            }\n            this.hammer = mc;\n        }\n    }, {\n        key: '_dealWithMoveActionStart',\n        value: function _dealWithMoveActionStart(event) {\n            if (_lock2.default.getLockState(_profile.LOCK_NAME)) return;\n            this.bodyEl.classList.remove(_profile.ITEM_ANIMATION_CLASS);\n            this.opt.beforeSwipe && this.opt.beforeSwipe(this.currentIndex);\n            this.deltaX = event.deltaX;\n            this.bodyEl.style.willChange = 'transform';\n        }\n    }, {\n        key: '_dealWithMoveAction',\n        value: function _dealWithMoveAction(event, force) {\n            if (_lock2.default.getLockState(_profile.LOCK_NAME) && !force) return;\n            force && this.bodyEl.classList.remove(_profile.ITEM_ANIMATION_CLASS);\n            var distance = event.deltaX - this.deltaX;\n            (0, _dom.setTranslateStyle)(this.bodyEl, this.translateX + distance, 0);\n        }\n    }, {\n        key: '_dealWithMoveActionEnd',\n        value: function _dealWithMoveActionEnd(event, force) {\n            if (_lock2.default.getLockState(_profile.LOCK_NAME) && !force) return;\n            var distance = event.deltaX - this.deltaX,\n                needSwipe = false,\n                needBreak = false;\n\n            if (this.currentIndex === 0 && distance > 0 && this.opt.swipeFirstRight) {\n                //当前图片是第一张，并且向右滑动\n                needBreak = this.opt.swipeFirstRight(this, Math.abs(distance));\n            } else if (this.currentIndex === this.imagesLength - 1 && distance < 0 && this.opt.swipeLastLeft) {\n                //当前图片是最后一张，并且向左滑动\n                needBreak = this.opt.swipeLastLeft(this, Math.abs(distance));\n            }\n\n            if (!needBreak) {\n                distance !== 0 && this.bodyEl.classList.add(_profile.ITEM_ANIMATION_CLASS);\n                if (distance !== 0 && this._checkDistance(distance)) {\n                    this.viewers.forEach(function (viewer) {\n                        viewer.removeAnimation();\n                    });\n                    needSwipe = distance > 0 ? this.swipeToPrev() : this.swipeToNext();\n                    this._updateCountElement();\n                } else {\n                    (0, _dom.setTranslateStyle)(this.bodyEl, this.translateX, 0);\n                }\n                this.opt.afterSwipe && this.opt.afterSwipe(this.currentIndex);\n            }\n            this.deltaX = 0;\n            this.bodyEl.style.willChange = 'auto';\n            return needSwipe;\n        }\n    }, {\n        key: '_dealWithScaleActionStart',\n        value: function _dealWithScaleActionStart(event) {\n            this.scaleStart = event.scale;\n            this.viewers[1]._pinchStart();\n        }\n    }, {\n        key: '_dealWithScaleAction',\n        value: function _dealWithScaleAction(event) {\n            this.viewers[1]._pinch(event.scale - this.scaleStart);\n        }\n    }, {\n        key: '_dealWithScaleActionEnd',\n        value: function _dealWithScaleActionEnd() {\n            this.viewers[1]._pinchEnd();\n        }\n    }, {\n        key: '_checkDistance',\n        value: function _checkDistance() {\n            var distance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            return Math.abs(distance) > this.width / 5;\n        }\n    }, {\n        key: '_getPrevImage',\n        value: function _getPrevImage() {\n            var minuend = this.currentIndex;\n            if (this.opt.loop && this.imagesLength > 2) {\n                minuend = this.currentIndex === 0 ? this.imagesLength : this.currentIndex;\n            }\n            return this.images[minuend - 1] || '';\n        }\n    }, {\n        key: '_getCurrentImage',\n        value: function _getCurrentImage() {\n            return this.images[this.currentIndex] || '';\n        }\n    }, {\n        key: '_getNextImage',\n        value: function _getNextImage() {\n            var addend = this.currentIndex;\n            if (this.opt.loop && this.imagesLength > 2) {\n                addend = this.currentIndex === this.imagesLength - 1 ? -1 : this.currentIndex;\n            }\n            return this.images[addend + 1] || '';\n        }\n    }, {\n        key: '_getSpecificImage',\n        value: function _getSpecificImage(index) {\n            return this.images[index] || '';\n        }\n\n        /**\n         * 重置当前图片的缩放\n         */\n\n    }, {\n        key: 'reset',\n        value: function reset() {\n            var viewer = this.viewers[1];\n            viewer.init(viewer.displayIndex, true, null, false);\n            setTimeout(function () {\n                _lock2.default.releaseLock(_profile.LOCK_NAME);\n            }, 0);\n        }\n\n        /**\n         * 移动循环队列\n         * @param direction 方向，0：队首移动到队尾，1：队尾移动到队首\n         * @returns {*}\n         */\n\n    }, {\n        key: 'loopViewers',\n        value: function loopViewers(direction) {\n            var viewer = null;\n            if (direction === 0) {\n                viewer = this.viewers.shift();\n                this.viewers.push(viewer);\n            } else if (direction === 1) {\n                viewer = this.viewers.pop();\n                this.viewers = [viewer].concat(this.viewers);\n            }\n            return viewer;\n        }\n\n        /**\n         * 滑动到上一张\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'swipeToPrev',\n        value: function swipeToPrev() {\n            var prevImage = this._getPrevImage();\n            if (prevImage) {\n                this.currentIndex--;\n                this.translateX += this.width;\n                (0, _dom.setTranslateStyle)(this.bodyEl, this.translateX, 0);\n\n                var image = this._getSpecificImage(this.currentIndex - 1);\n                if (image || this.currentIndex === 0) {\n                    var viewer = this.loopViewers(1);\n                    viewer.init(viewer.displayIndex - 3, true, null, true, image);\n                }\n                return true;\n            } else {\n                (0, _dom.setTranslateStyle)(this.bodyEl, this.translateX, 0);\n                return false;\n            }\n        }\n\n        /**\n         * 滑动到下一张\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'swipeToNext',\n        value: function swipeToNext() {\n            var nextImage = this._getNextImage();\n            if (nextImage) {\n                this.currentIndex++;\n                this.translateX -= this.width;\n                (0, _dom.setTranslateStyle)(this.bodyEl, this.translateX, 0);\n\n                var image = this._getSpecificImage(this.currentIndex + 1);\n                if (image || this.currentIndex === this.imagesLength - 1) {\n                    var viewer = this.loopViewers(0);\n                    viewer.init(viewer.displayIndex + 3, true, null, true, image);\n                }\n                return true;\n            } else {\n                (0, _dom.setTranslateStyle)(this.bodyEl, this.translateX, 0);\n                return false;\n            }\n        }\n\n        /**\n         * 根据给定的下标移动到指定图片处\n         * @param index 数组下标，从0开始\n         */\n\n    }, {\n        key: 'swipeInByIndex',\n        value: function swipeInByIndex(index) {\n            if (!isNaN(index) && -1 < index && index < this.imagesLength) {\n                this.currentIndex = index;\n                this.translateX = 0;\n                (0, _dom.setTranslateStyle)(this.bodyEl, 0, 0);\n\n                this.viewers = this.viewers.sort(function (a, b) {\n                    return a.index < b.index;\n                });\n                this.viewers[0].init(-1, true, null, true, this._getPrevImage());\n                this.viewers[1].init(0, true, null, true, this._getCurrentImage());\n                this.viewers[2].init(1, true, null, true, this._getNextImage());\n\n                this._updateCountElement();\n            } else {\n                (0, _debug.debug)('illegal index!');\n            }\n        }\n    }, {\n        key: 'setImageOption',\n        value: function setImageOption() {\n            var images = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            if (!images.length) {\n                (0, _debug.debug)('images array can not be empty!');\n            }\n            this.images = images;\n            this.imagesLength = images.length;\n            this.currentIndex = startIndex;\n            this._init();\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.el && (0, _dom.removeElement)(this.el);\n        }\n    }, {\n        key: 'close',\n        value: function close() {\n            if (this.el) {\n                this.el.style.display = 'none';\n            }\n        }\n    }, {\n        key: 'open',\n        value: function open(index) {\n            this.currentIndex = index === undefined ? this.currentIndex : index;\n            if (!this.el) {\n                //仅仅实例化，但尚未初始化\n                this._create();\n                this._init();\n                this._bindEvent();\n            } else {\n                this.swipeInByIndex(this.currentIndex);\n            }\n            this.el.style.display = 'block';\n        }\n    }]);\n\n    return ImageViewer;\n}();\n\nexports.default = ImageViewer;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar debug = function debug(msg) {\n    window.console.log('[ImageViewer]:' + msg);\n};\n\nexports.debug = debug;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom = __webpack_require__(0);\n\nvar _profile = __webpack_require__(1);\n\nvar _lock = __webpack_require__(2);\n\nvar _lock2 = _interopRequireDefault(_lock);\n\nvar _event = __webpack_require__(8);\n\nvar _event2 = _interopRequireDefault(_event);\n\nvar _hammer = __webpack_require__(3);\n\nvar _hammer2 = _interopRequireDefault(_hammer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Viewer = function () {\n    function Viewer(imageViewer, el, width, height, index) {\n        _classCallCheck(this, Viewer);\n\n        this.event = new _event2.default(false);\n        this.imageViewer = imageViewer;\n        this.el = el; //.viewer类\n        this.panelEl = el.firstElementChild; //.panel类\n        this.imageEl = (0, _dom.query)('img', this.el)[0];\n        this.src = '';\n        this.index = index; //viewer排序用，记录原始的数组位置\n        this.displayIndex = 0;\n        this.width = width;\n        this.height = height;\n        this.realWidth = 0;\n        this.realHeight = 0;\n        this.translateX = 0;\n        this.translateY = 0;\n        this.scale = 1; //缩放比例\n        this.currentScale = 1; //当前正在缩放的倍数(临时保存,当事件结束后,会赋值回scale)\n        this.translatePanelX = 0; //最终图片面板所在的X轴坐标\n        this.translatePanelY = 0; //最终图片面板所在的Y轴坐标\n        this.currentPanelX = 0; //当前图片面板所在的X轴坐标（手指尚未离开屏幕）\n        this.currentPanelY = 0; //当前图片面板所在的Y轴坐标（手指尚未离开屏幕）\n        this.allowDistanceX = 0; //图片放大后，允许拖动的最大X轴距离\n        this.allowDistanceY = 0; //图片放大后，允许拖动的最大Y轴距离\n        this.needResetX = false; //拖动图片超出边界时，需要重置一下x轴的坐标\n        this.needResetY = false; //拖动图片超出边界时，需要重置一下y轴的坐标\n        this.deltaX = 0; //存储起始的X轴偏移量\n        this.deltaY = 0; //存储起始的Y轴偏移量\n        this.EVENT_NAME = 'IMG_LOAD_COMPLETE';\n        this._bindEvent();\n    }\n\n    _createClass(Viewer, [{\n        key: 'init',\n        value: function init() {\n            var displayIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var resetScale = arguments[1];\n            var fn = arguments[2];\n\n            var _this = this;\n\n            var needLoad = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n            var src = arguments[4];\n\n            var _initImage = function _initImage() {\n                if (resetScale) {\n                    _this.scale = 1;\n                    _this.allowDistanceX = _this.allowDistanceY = 0;\n                }\n                if (needLoad) {\n                    _this.imageEl.style.display = '';\n                }\n                _this.translatePanelX = 0;\n                _this.translatePanelY = 0;\n                _this.currentPanelX = 0;\n                _this.currentPanelY = 0;\n                _this.realWidth = _this.panelEl.clientWidth * _this.scale;\n                _this.realHeight = _this.panelEl.clientHeight * _this.scale;\n                _this.translateX = _this.displayIndex * _this.width;\n                _this.translateY = -_this.el.clientHeight / 2;\n                _this.needResetX = _this.needResetY = false;\n                (0, _dom.setScaleAndTranslateStyle)(_this.panelEl, _this.scale, _this.translatePanelX, _this.translatePanelY);\n                (0, _dom.setTranslateStyle)(_this.el, _this.translateX, _this.translateY);\n                fn && fn.apply(_this);\n            };\n            this.displayIndex = displayIndex;\n\n            if (needLoad) {\n                this.src = src;\n                this.imageEl.src = this.src;\n                this.imageEl.style.display = 'none';\n                this.event.on(this.EVENT_NAME, function () {\n                    _initImage();\n                });\n                (0, _dom.setTranslateStyle)(this.el, this.displayIndex * this.width, this.translateY);\n            } else {\n                _initImage();\n            }\n            return this;\n        }\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            var _this2 = this;\n\n            var mc = new _hammer2.default.Manager(this.panelEl);\n            mc.add(new _hammer2.default.Pan());\n            mc.on('panstart', function (event) {\n                _this2.removeAnimation();\n                if (_lock2.default.getLockState(_profile.LOCK_NAME)) {\n                    _this2.deltaX = event.deltaX;\n                    _this2.deltaY = event.deltaY;\n                }\n            });\n            mc.on('panmove', function (event) {\n                if (_lock2.default.getLockState(_profile.LOCK_NAME)) {\n                    event.preventDefault();\n                    _this2._translatePanel(event.deltaX - _this2.deltaX, event.deltaY - _this2.deltaY);\n                }\n            });\n            mc.on('panend', function (event) {\n                if (_lock2.default.getLockState(_profile.LOCK_NAME)) {\n                    _this2._translatePanelEnd(event.deltaX - _this2.deltaX);\n                }\n            });\n\n            this.imageEl.addEventListener('load', function () {\n                _this2.event.emit(_this2.EVENT_NAME);\n            }, false);\n        }\n    }, {\n        key: '_pinchStart',\n        value: function _pinchStart() {\n            this.removeAnimation();\n            this.panelEl.style.willChange = 'transform';\n        }\n    }, {\n        key: '_pinch',\n        value: function _pinch(scale) {\n            var currentScale = scale * this.scale + this.scale;\n            if (currentScale > 0.5 && currentScale < 8) {\n                this.currentScale = currentScale;\n                (0, _dom.setScaleAndTranslateStyle)(this.panelEl, this.currentScale, this.translatePanelX, this.translatePanelY);\n            }\n            return this;\n        }\n    }, {\n        key: '_pinchEnd',\n        value: function _pinchEnd(scale) {\n            this.scale = isNaN(scale) ? this.currentScale : scale;\n            this.realWidth = this.panelEl.clientWidth * this.scale;\n            this.realHeight = this.panelEl.clientHeight * this.scale;\n            this.allowDistanceX = (this.realWidth - this.width) / 2 / this.scale + 2;\n            this.allowDistanceY = (this.realHeight - this.height) / 2 / this.scale + 2;\n            if (this.realWidth < this.width || this.realHeight < this.height) {\n                this.init(this.displayIndex, false, null, false);\n            }\n            if (this.isScale()) {\n                _lock2.default.getLock(_profile.LOCK_NAME);\n            } else {\n                _lock2.default.releaseLock(_profile.LOCK_NAME);\n            }\n            this.panelEl.style.willChange = 'auto';\n            return this;\n        }\n    }, {\n        key: '_calculate',\n        value: function _calculate(a, b) {\n            return a > 0 ? a - b : a + b;\n        }\n    }, {\n        key: '_translatePanel',\n        value: function _translatePanel(translatePanelX, translatePanelY) {\n            var tempX = 0;\n            if (this.realWidth <= this.width && translatePanelX) {\n                this.imageViewer._dealWithMoveAction({ deltaX: translatePanelX }, true);\n            } else {\n                if (this.allowDistanceX > 0 && translatePanelX) {\n                    this.currentPanelX = translatePanelX / this.scale + this.translatePanelX;\n                    this.needResetX = !(-this.allowDistanceX < this.currentPanelX && this.currentPanelX < this.allowDistanceX);\n                }\n\n                if (this.needResetX) {\n                    this.imageViewer._dealWithMoveAction({ deltaX: this._calculate(this.currentPanelX, this.allowDistanceX) }, true);\n                    tempX = this.currentPanelX > 0 ? this.allowDistanceX : -this.allowDistanceX;\n                } else {\n                    this.imageViewer._dealWithMoveAction({ deltaX: 0 }, true);\n                    tempX = this.currentPanelX;\n                }\n            }\n            if (this.allowDistanceY > 0 && translatePanelY) {\n                this.currentPanelY = translatePanelY / this.scale + this.translatePanelY;\n                this.needResetY = !(-this.allowDistanceY < this.currentPanelY && this.currentPanelY < this.allowDistanceY);\n            }\n            (0, _dom.setScaleAndTranslateStyle)(this.panelEl, this.scale, tempX, this.currentPanelY);\n            return this;\n        }\n    }, {\n        key: '_translatePanelEnd',\n        value: function _translatePanelEnd(translatePanelX) {\n            var needSwipe = false;\n            if (this.realWidth <= this.width && translatePanelX) {\n                needSwipe = this.imageViewer._dealWithMoveActionEnd({ deltaX: translatePanelX }, true);\n            } else if (this.needResetX) {\n                needSwipe = this.imageViewer._dealWithMoveActionEnd({ deltaX: this._calculate(this.currentPanelX, this.allowDistanceX) }, true);\n            }\n            if (needSwipe) {\n                //滑动到下一张，重置当前图片的尺寸\n                this.init(this.displayIndex, true, null, false);\n                setTimeout(function () {\n                    _lock2.default.releaseLock(_profile.LOCK_NAME);\n                }, 0);\n            } else {\n                if (this.needResetX) {\n                    this.translatePanelX = this.currentPanelX > 0 ? this.allowDistanceX : -this.allowDistanceX;\n                } else {\n                    this.translatePanelX = this.currentPanelX;\n                }\n                if (this.needResetY) {\n                    this.translatePanelY = this.currentPanelY > 0 ? this.allowDistanceY : -this.allowDistanceY;\n                } else {\n                    this.translatePanelY = this.currentPanelY;\n                }\n                if (this.needResetX || this.needResetY) {\n                    this.addAnimation();\n                    (0, _dom.setScaleAndTranslateStyle)(this.panelEl, this.scale, this.translatePanelX, this.translatePanelY);\n                }\n                this.needResetX = this.needResetY = false;\n            }\n            return this;\n        }\n    }, {\n        key: 'isScale',\n        value: function isScale() {\n            return Math.abs(this.scale - 1) > 0.01;\n        }\n    }, {\n        key: 'addAnimation',\n        value: function addAnimation() {\n            this.panelEl.classList.add(_profile.ITEM_ANIMATION_CLASS);\n            this.el.classList.add(_profile.ITEM_ANIMATION_CLASS);\n        }\n    }, {\n        key: 'removeAnimation',\n        value: function removeAnimation() {\n            this.panelEl.classList.remove(_profile.ITEM_ANIMATION_CLASS);\n            this.el.classList.remove(_profile.ITEM_ANIMATION_CLASS);\n        }\n    }]);\n\n    return Viewer;\n}();\n\nexports.default = Viewer;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Event = function () {\n    /**\n     * 构造器\n     * @param _enableMultiple 标记该事件实例是否允许同一事件挂载多个处理函数\n     */\n    function Event() {\n        var _enableMultiple = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        _classCallCheck(this, Event);\n\n        this._enableMultiple = _enableMultiple;\n        this._handlers = {};\n    }\n\n    /**\n     * 绑定事件处理函数\n     * @param name 事件名字\n     * @param handler 对应的事件处理函数\n     * @param enableMultiple 标记该事件是否允许挂载多个处理函数\n     */\n\n\n    _createClass(Event, [{\n        key: \"on\",\n        value: function on(name, handler, enableMultiple) {\n            enableMultiple = enableMultiple === undefined ? this._enableMultiple : enableMultiple;\n            if (enableMultiple) {\n                if (!this._handlers[name]) {\n                    this._handlers[name] = [];\n                }\n                this._handlers[name].push(handler);\n            } else {\n                this._handlers[name] = [handler];\n            }\n        }\n\n        /**\n         * 销毁对应的处理函数\n         * @param name 事件名\n         */\n\n    }, {\n        key: \"off\",\n        value: function off(name) {\n            delete this._handlers[name];\n        }\n\n        /**\n         * 触发事件\n         * @param name 事件名\n         * @param args 参数数组，传递给各个事件处理函数\n         */\n\n    }, {\n        key: \"emit\",\n        value: function emit(name) {\n            var _this = this;\n\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            var handlers = this._handlers[name] || [],\n                event = { stop: false },\n                length = handlers.length;\n            //传递给事件处理函数的第一个参数为事件对象\n            //该对象拥有一些可能会有用的属性和函数（比如可以终止处理函数链的执行exit）\n            args = args.concat([{\n                name: name, //事件名\n                length: length, //事件处理函数的数量\n                /**\n                 * 阻止继续执行函数处理链并退出\n                 */\n                exit: function exit() {\n                    event.stop = true;\n                }\n            }]);\n            if (length) {\n                //仅当存在处理函数时才执行\n                handlers.forEach(function (handler) {\n                    !event.stop && handler.apply(_this, args);\n                });\n            }\n        }\n    }]);\n\n    return Event;\n}();\n\nexports.default = Event;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(10);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(12)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(11)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".viewer-animation {\\n    -webkit-transition: -webkit-transform .3s;\\n    transition: -webkit-transform .3s;\\n    transition: transform .3s;\\n    transition: transform .3s, -webkit-transform .3s;\\n}\\n\\n.image-viewer {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: black;\\n    z-index: 10000;\\n    font-size: 0;\\n    -webkit-transform: translate3d(0, 0, 0);\\n            transform: translate3d(0, 0, 0);\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n    overflow: hidden;\\n}\\n\\n.image-viewer .viewer {\\n    display: inline-block;\\n    position: absolute;\\n    top: 50%;\\n    width: 100%;\\n    text-align: center;\\n    -webkit-transform: translate3d(0, -50%, 0);\\n            transform: translate3d(0, -50%, 0);\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n}\\n\\n.image-viewer .image-header {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    color: #fff;\\n    font-size: 12px;\\n    z-index: 11;\\n}\\n\\n.image-viewer .image-body {\\n    width: 100%;\\n    height: 100%;\\n    font-size: 0;\\n    z-index: 10;\\n}\\n\\n.image-viewer .image-body .panel img {\\n    max-width: 100%;\\n    max-height: 100%;\\n}\\n\\n.image-viewer .image-footer {\\n    position: absolute;\\n    left: 0;\\n    bottom: 0;\\n    width: 100%;\\n    color: #fff;\\n    font-size: 12px;\\n    z-index: 11;\\n}\\n\\n.image-viewer .panel {\\n    display: inline-block;\\n    overflow: hidden;\\n}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(13);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// imageViewer.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 221d6d552e3319acf68a","let transformProp = (function getTransformProperty() {\n    let props = ['transform', 'webkitTransform', 'MozTransform', 'oTransform', 'msTransform'];\n    let style = document.createElement('div').style, availProp = '';\n    props.forEach(function (prop) {\n        if (style[prop] !== undefined) {\n            availProp = prop;\n        }\n    });\n    return availProp;\n})();\n\nfunction query(selector, el) {\n    el = el || document;\n    return el.querySelectorAll(selector);\n}\n\nfunction removeElement(element) {\n    let parentElement = element.parentNode;\n    if (parentElement) {\n        parentElement.removeChild(element);\n    }\n}\n\nfunction setTranslateStyle(el, x, y) {\n    el.style[transformProp] = `translate3d(${x + 'px'},${y + 'px'},0)`;\n}\n\nfunction setScaleAndTranslateStyle(el, scale, x, y) {\n    el.style[transformProp] = `scale3d(${scale},${scale},1) translate3d(${x + 'px'},${y + 'px'},0)`;\n}\n\nexport {\n    query,\n    removeElement,\n    setTranslateStyle,\n    setScaleAndTranslateStyle\n};\n\n\n// WEBPACK FOOTER //\n// ./src/common/dom.js","const ITEM_ANIMATION_CLASS = 'viewer-animation';\nconst LOCK_NAME = 'STOP_SWIPE';\n\nexport {\n    LOCK_NAME,\n    ITEM_ANIMATION_CLASS\n};\n\n\n// WEBPACK FOOTER //\n// ./src/common/profile.js","class Lock {\n    constructor() {\n        this._locks = {};\n    }\n\n    createLock(name) {\n        this._locks[name] = false;\n    }\n\n    deleteLock(name) {\n        delete this._locks[name];\n    }\n\n    getLock(name) {\n        this._locks[name] = true;\n    }\n\n    releaseLock(name) {\n        this._locks[name] = false;\n    }\n\n    getLockState(name) {\n        return this._locks[name];\n    }\n}\n\nexport default new Lock();\n\n\n// WEBPACK FOOTER //\n// ./src/common/lock.js","(function (window, document, exportName, undefined) {\n    'use strict';\n\n    var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n    var TEST_ELEMENT = document.createElement('div');\n\n    var TYPE_FUNCTION = 'function';\n\n    var round = Math.round;\n    var abs = Math.abs;\n    var now = Date.now;\n\n    /**\n     * set a timeout with a given scope\n     * @param {Function} fn\n     * @param {Number} timeout\n     * @param {Object} context\n     * @returns {number}\n     */\n    function setTimeoutContext(fn, timeout, context) {\n        return setTimeout(bindFn(fn, context), timeout);\n    }\n\n    /**\n     * if the argument is an array, we want to execute the fn on each entry\n     * if it aint an array we don't want to do a thing.\n     * this is used by all the methods that accept a single and array argument.\n     * @param {*|Array} arg\n     * @param {String} fn\n     * @param {Object} [context]\n     * @returns {Boolean}\n     */\n    function invokeArrayArg(arg, fn, context) {\n        if (Array.isArray(arg)) {\n            each(arg, context[fn], context);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * walk objects and arrays\n     * @param {Object} obj\n     * @param {Function} iterator\n     * @param {Object} context\n     */\n    function each(obj, iterator, context) {\n        var i;\n\n        if (!obj) {\n            return;\n        }\n\n        if (obj.forEach) {\n            obj.forEach(iterator, context);\n        } else if (obj.length !== undefined) {\n            i = 0;\n            while (i < obj.length) {\n                iterator.call(context, obj[i], i, obj);\n                i++;\n            }\n        } else {\n            for (i in obj) {\n                obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n            }\n        }\n    }\n\n    /**\n     * wrap a method with a deprecation warning and stack trace\n     * @param {Function} method\n     * @param {String} name\n     * @param {String} message\n     * @returns {Function} A new function wrapping the supplied method.\n     */\n    function deprecate(method, name, message) {\n        var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n        return function () {\n            var e = new Error('get-stack-trace');\n            var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n                    .replace(/^\\s+at\\s+/gm, '')\n                    .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n            var log = window.console && (window.console.warn || window.console.log);\n            if (log) {\n                log.call(window.console, deprecationMessage, stack);\n            }\n            return method.apply(this, arguments);\n        };\n    }\n\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} target\n     * @param {...Object} objects_to_assign\n     * @returns {Object} target\n     */\n    var assign;\n    if (typeof Object.assign !== 'function') {\n        assign = function assign(target) {\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var output = Object(target);\n            for (var index = 1; index < arguments.length; index++) {\n                var source = arguments[index];\n                if (source !== undefined && source !== null) {\n                    for (var nextKey in source) {\n                        if (source.hasOwnProperty(nextKey)) {\n                            output[nextKey] = source[nextKey];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n    } else {\n        assign = Object.assign;\n    }\n\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} dest\n     * @param {Object} src\n     * @param {Boolean} [merge=false]\n     * @returns {Object} dest\n     */\n    var extend = deprecate(function extend(dest, src, merge) {\n        var keys = Object.keys(src);\n        var i = 0;\n        while (i < keys.length) {\n            if (!merge || (merge && dest[keys[i]] === undefined)) {\n                dest[keys[i]] = src[keys[i]];\n            }\n            i++;\n        }\n        return dest;\n    }, 'extend', 'Use `assign`.');\n\n    /**\n     * merge the values from src in the dest.\n     * means that properties that exist in dest will not be overwritten by src\n     * @param {Object} dest\n     * @param {Object} src\n     * @returns {Object} dest\n     */\n    var merge = deprecate(function merge(dest, src) {\n        return extend(dest, src, true);\n    }, 'merge', 'Use `assign`.');\n\n    /**\n     * simple class inheritance\n     * @param {Function} child\n     * @param {Function} base\n     * @param {Object} [properties]\n     */\n    function inherit(child, base, properties) {\n        var baseP = base.prototype,\n            childP;\n\n        childP = child.prototype = Object.create(baseP);\n        childP.constructor = child;\n        childP._super = baseP;\n\n        if (properties) {\n            assign(childP, properties);\n        }\n    }\n\n    /**\n     * simple function bind\n     * @param {Function} fn\n     * @param {Object} context\n     * @returns {Function}\n     */\n    function bindFn(fn, context) {\n        return function boundFn() {\n            return fn.apply(context, arguments);\n        };\n    }\n\n    /**\n     * let a boolean value also be a function that must return a boolean\n     * this first item in args will be used as the context\n     * @param {Boolean|Function} val\n     * @param {Array} [args]\n     * @returns {Boolean}\n     */\n    function boolOrFn(val, args) {\n        if (typeof val == TYPE_FUNCTION) {\n            return val.apply(args ? args[0] || undefined : undefined, args);\n        }\n        return val;\n    }\n\n    /**\n     * use the val2 when val1 is undefined\n     * @param {*} val1\n     * @param {*} val2\n     * @returns {*}\n     */\n    function ifUndefined(val1, val2) {\n        return (val1 === undefined) ? val2 : val1;\n    }\n\n    /**\n     * addEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function addEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.addEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * removeEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function removeEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.removeEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * find if a node is in the given parent\n     * @method hasParent\n     * @param {HTMLElement} node\n     * @param {HTMLElement} parent\n     * @return {Boolean} found\n     */\n    function hasParent(node, parent) {\n        while (node) {\n            if (node == parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    }\n\n    /**\n     * small indexOf wrapper\n     * @param {String} str\n     * @param {String} find\n     * @returns {Boolean} found\n     */\n    function inStr(str, find) {\n        return str.indexOf(find) > -1;\n    }\n\n    /**\n     * split string on whitespace\n     * @param {String} str\n     * @returns {Array} words\n     */\n    function splitStr(str) {\n        return str.trim().split(/\\s+/g);\n    }\n\n    /**\n     * find if a array contains the object using indexOf or a simple polyFill\n     * @param {Array} src\n     * @param {String} find\n     * @param {String} [findByKey]\n     * @return {Boolean|Number} false when not found, or the index\n     */\n    function inArray(src, find, findByKey) {\n        if (src.indexOf && !findByKey) {\n            return src.indexOf(find);\n        } else {\n            var i = 0;\n            while (i < src.length) {\n                if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                    return i;\n                }\n                i++;\n            }\n            return -1;\n        }\n    }\n\n    /**\n     * convert array-like objects to real arrays\n     * @param {Object} obj\n     * @returns {Array}\n     */\n    function toArray(obj) {\n        return Array.prototype.slice.call(obj, 0);\n    }\n\n    /**\n     * unique array with objects based on a key (like 'id') or just by the array's value\n     * @param {Array} src [{id:1},{id:2},{id:1}]\n     * @param {String} [key]\n     * @param {Boolean} [sort=False]\n     * @returns {Array} [{id:1},{id:2}]\n     */\n    function uniqueArray(src, key, sort) {\n        var results = [];\n        var values = [];\n        var i = 0;\n\n        while (i < src.length) {\n            var val = key ? src[i][key] : src[i];\n            if (inArray(values, val) < 0) {\n                results.push(src[i]);\n            }\n            values[i] = val;\n            i++;\n        }\n\n        if (sort) {\n            if (!key) {\n                results = results.sort();\n            } else {\n                results = results.sort(function sortUniqueArray(a, b) {\n                    return a[key] > b[key];\n                });\n            }\n        }\n\n        return results;\n    }\n\n    /**\n     * get the prefixed property\n     * @param {Object} obj\n     * @param {String} property\n     * @returns {String|Undefined} prefixed\n     */\n    function prefixed(obj, property) {\n        var prefix, prop;\n        var camelProp = property[0].toUpperCase() + property.slice(1);\n\n        var i = 0;\n        while (i < VENDOR_PREFIXES.length) {\n            prefix = VENDOR_PREFIXES[i];\n            prop = (prefix) ? prefix + camelProp : property;\n\n            if (prop in obj) {\n                return prop;\n            }\n            i++;\n        }\n        return undefined;\n    }\n\n    /**\n     * get a unique id\n     * @returns {number} uniqueId\n     */\n    var _uniqueId = 1;\n\n    function uniqueId() {\n        return _uniqueId++;\n    }\n\n    /**\n     * get the window object of an element\n     * @param {HTMLElement} element\n     * @returns {DocumentView|Window}\n     */\n    function getWindowForElement(element) {\n        var doc = element.ownerDocument || element;\n        return (doc.defaultView || doc.parentWindow || window);\n    }\n\n    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\n    var SUPPORT_TOUCH = ('ontouchstart' in window);\n    var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\n    var INPUT_TYPE_TOUCH = 'touch';\n    var INPUT_TYPE_PEN = 'pen';\n    var INPUT_TYPE_MOUSE = 'mouse';\n    var INPUT_TYPE_KINECT = 'kinect';\n\n    var COMPUTE_INTERVAL = 25;\n\n    var INPUT_START = 1;\n    var INPUT_MOVE = 2;\n    var INPUT_END = 4;\n    var INPUT_CANCEL = 8;\n\n    var DIRECTION_NONE = 1;\n    var DIRECTION_LEFT = 2;\n    var DIRECTION_RIGHT = 4;\n    var DIRECTION_UP = 8;\n    var DIRECTION_DOWN = 16;\n\n    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\n    var PROPS_XY = ['x', 'y'];\n    var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n    /**\n     * create new input type manager\n     * @param {Manager} manager\n     * @param {Function} callback\n     * @returns {Input}\n     * @constructor\n     */\n    function Input(manager, callback) {\n        var self = this;\n        this.manager = manager;\n        this.callback = callback;\n        this.element = manager.element;\n        this.target = manager.options.inputTarget;\n\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n        // so when disabled the input events are completely bypassed.\n        this.domHandler = function (ev) {\n            if (boolOrFn(manager.options.enable, [manager])) {\n                self.handler(ev);\n            }\n        };\n\n        this.init();\n\n    }\n\n    Input.prototype = {\n        /**\n         * should handle the inputEvent data and trigger the callback\n         * @virtual\n         */\n        handler: function () {\n        },\n\n        /**\n         * bind the events\n         */\n        init: function () {\n            this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        },\n\n        /**\n         * unbind the events\n         */\n        destroy: function () {\n            this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        }\n    };\n\n    /**\n     * create new input type manager\n     * called by the Manager constructor\n     * @param {Hammer} manager\n     * @returns {Input}\n     */\n    function createInputInstance(manager) {\n        var Type;\n        var inputClass = manager.options.inputClass;\n\n        if (inputClass) {\n            Type = inputClass;\n        } else if (SUPPORT_POINTER_EVENTS) {\n            Type = PointerEventInput;\n        } else if (SUPPORT_ONLY_TOUCH) {\n            Type = TouchInput;\n        } else if (!SUPPORT_TOUCH) {\n            Type = MouseInput;\n        } else {\n            Type = TouchMouseInput;\n        }\n        return new (Type)(manager, inputHandler);\n    }\n\n    /**\n     * handle input events\n     * @param {Manager} manager\n     * @param {String} eventType\n     * @param {Object} input\n     */\n    function inputHandler(manager, eventType, input) {\n        var pointersLen = input.pointers.length;\n        var changedPointersLen = input.changedPointers.length;\n        var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n        var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n        input.isFirst = !!isFirst;\n        input.isFinal = !!isFinal;\n\n        if (isFirst) {\n            manager.session = {};\n        }\n\n        // source event is the normalized value of the domEvents\n        // like 'touchstart, mouseup, pointerdown'\n        input.eventType = eventType;\n\n        // compute scale, rotation etc\n        computeInputData(manager, input);\n\n        // emit secret event\n        manager.emit('hammer.input', input);\n\n        manager.recognize(input);\n        manager.session.prevInput = input;\n    }\n\n    /**\n     * extend the data with some usable properties like scale, rotate, velocity etc\n     * @param {Object} manager\n     * @param {Object} input\n     */\n    function computeInputData(manager, input) {\n        var session = manager.session;\n        var pointers = input.pointers;\n        var pointersLength = pointers.length;\n\n        // store the first input to calculate the distance and direction\n        if (!session.firstInput) {\n            session.firstInput = simpleCloneInputData(input);\n        }\n\n        // to compute scale and rotation we need to store the multiple touches\n        if (pointersLength > 1 && !session.firstMultiple) {\n            session.firstMultiple = simpleCloneInputData(input);\n        } else if (pointersLength === 1) {\n            session.firstMultiple = false;\n        }\n\n        var firstInput = session.firstInput;\n        var firstMultiple = session.firstMultiple;\n        var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n        var center = input.center = getCenter(pointers);\n        input.timeStamp = now();\n        input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n        input.angle = getAngle(offsetCenter, center);\n        input.distance = getDistance(offsetCenter, center);\n\n        computeDeltaXY(session, input);\n        input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n        var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n        input.overallVelocityX = overallVelocity.x;\n        input.overallVelocityY = overallVelocity.y;\n        input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n        input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n        input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n        input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n            session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n        computeIntervalInputData(session, input);\n\n        // find the correct target\n        var target = manager.element;\n        if (hasParent(input.srcEvent.target, target)) {\n            target = input.srcEvent.target;\n        }\n        input.target = target;\n    }\n\n    function computeDeltaXY(session, input) {\n        var center = input.center;\n        var offset = session.offsetDelta || {};\n        var prevDelta = session.prevDelta || {};\n        var prevInput = session.prevInput || {};\n\n        if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n            prevDelta = session.prevDelta = {\n                x: prevInput.deltaX || 0,\n                y: prevInput.deltaY || 0\n            };\n\n            offset = session.offsetDelta = {\n                x: center.x,\n                y: center.y\n            };\n        }\n\n        input.deltaX = prevDelta.x + (center.x - offset.x);\n        input.deltaY = prevDelta.y + (center.y - offset.y);\n    }\n\n    /**\n     * velocity is calculated every x ms\n     * @param {Object} session\n     * @param {Object} input\n     */\n    function computeIntervalInputData(session, input) {\n        var last = session.lastInterval || input,\n            deltaTime = input.timeStamp - last.timeStamp,\n            velocity, velocityX, velocityY, direction;\n\n        if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n            var deltaX = input.deltaX - last.deltaX;\n            var deltaY = input.deltaY - last.deltaY;\n\n            var v = getVelocity(deltaTime, deltaX, deltaY);\n            velocityX = v.x;\n            velocityY = v.y;\n            velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n            direction = getDirection(deltaX, deltaY);\n\n            session.lastInterval = input;\n        } else {\n            // use latest velocity info if it doesn't overtake a minimum period\n            velocity = last.velocity;\n            velocityX = last.velocityX;\n            velocityY = last.velocityY;\n            direction = last.direction;\n        }\n\n        input.velocity = velocity;\n        input.velocityX = velocityX;\n        input.velocityY = velocityY;\n        input.direction = direction;\n    }\n\n    /**\n     * create a simple clone from the input used for storage of firstInput and firstMultiple\n     * @param {Object} input\n     * @returns {Object} clonedInputData\n     */\n    function simpleCloneInputData(input) {\n        // make a simple copy of the pointers because we will get a reference if we don't\n        // we only need clientXY for the calculations\n        var pointers = [];\n        var i = 0;\n        while (i < input.pointers.length) {\n            pointers[i] = {\n                clientX: round(input.pointers[i].clientX),\n                clientY: round(input.pointers[i].clientY)\n            };\n            i++;\n        }\n\n        return {\n            timeStamp: now(),\n            pointers: pointers,\n            center: getCenter(pointers),\n            deltaX: input.deltaX,\n            deltaY: input.deltaY\n        };\n    }\n\n    /**\n     * get the center of all the pointers\n     * @param {Array} pointers\n     * @return {Object} center contains `x` and `y` properties\n     */\n    function getCenter(pointers) {\n        var pointersLength = pointers.length;\n\n        // no need to loop when only one touch\n        if (pointersLength === 1) {\n            return {\n                x: round(pointers[0].clientX),\n                y: round(pointers[0].clientY)\n            };\n        }\n\n        var x = 0, y = 0, i = 0;\n        while (i < pointersLength) {\n            x += pointers[i].clientX;\n            y += pointers[i].clientY;\n            i++;\n        }\n\n        return {\n            x: round(x / pointersLength),\n            y: round(y / pointersLength)\n        };\n    }\n\n    /**\n     * calculate the velocity between two points. unit is in px per ms.\n     * @param {Number} deltaTime\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Object} velocity `x` and `y`\n     */\n    function getVelocity(deltaTime, x, y) {\n        return {\n            x: x / deltaTime || 0,\n            y: y / deltaTime || 0\n        };\n    }\n\n    /**\n     * get the direction between two points\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Number} direction\n     */\n    function getDirection(x, y) {\n        if (x === y) {\n            return DIRECTION_NONE;\n        }\n\n        if (abs(x) >= abs(y)) {\n            return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        }\n        return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n    }\n\n    /**\n     * calculate the absolute distance between two points\n     * @param {Object} p1 {x, y}\n     * @param {Object} p2 {x, y}\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} distance\n     */\n    function getDistance(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n\n        return Math.sqrt((x * x) + (y * y));\n    }\n\n    /**\n     * calculate the angle between two coordinates\n     * @param {Object} p1\n     * @param {Object} p2\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} angle\n     */\n    function getAngle(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n        return Math.atan2(y, x) * 180 / Math.PI;\n    }\n\n    /**\n     * calculate the rotation degrees between two pointersets\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} rotation\n     */\n    function getRotation(start, end) {\n        return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n    }\n\n    /**\n     * calculate the scale factor between two pointersets\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} scale\n     */\n    function getScale(start, end) {\n        return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n    }\n\n    var MOUSE_INPUT_MAP = {\n        mousedown: INPUT_START,\n        mousemove: INPUT_MOVE,\n        mouseup: INPUT_END\n    };\n\n    var MOUSE_ELEMENT_EVENTS = 'mousedown';\n    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n    /**\n     * Mouse events input\n     * @constructor\n     * @extends Input\n     */\n    function MouseInput() {\n        this.evEl = MOUSE_ELEMENT_EVENTS;\n        this.evWin = MOUSE_WINDOW_EVENTS;\n\n        this.pressed = false; // mousedown state\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(MouseInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function MEhandler(ev) {\n            var eventType = MOUSE_INPUT_MAP[ev.type];\n\n            // on start we want to have the left mouse button down\n            if (eventType & INPUT_START && ev.button === 0) {\n                this.pressed = true;\n            }\n\n            if (eventType & INPUT_MOVE && ev.which !== 1) {\n                eventType = INPUT_END;\n            }\n\n            // mouse must be down\n            if (!this.pressed) {\n                return;\n            }\n\n            if (eventType & INPUT_END) {\n                this.pressed = false;\n            }\n\n            this.callback(this.manager, eventType, {\n                pointers: [ev],\n                changedPointers: [ev],\n                pointerType: INPUT_TYPE_MOUSE,\n                srcEvent: ev\n            });\n        }\n    });\n\n    var POINTER_INPUT_MAP = {\n        pointerdown: INPUT_START,\n        pointermove: INPUT_MOVE,\n        pointerup: INPUT_END,\n        pointercancel: INPUT_CANCEL,\n        pointerout: INPUT_CANCEL\n    };\n\n// in IE10 the pointer types is defined as an enum\n    var IE10_POINTER_TYPE_ENUM = {\n        2: INPUT_TYPE_TOUCH,\n        3: INPUT_TYPE_PEN,\n        4: INPUT_TYPE_MOUSE,\n        5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n    };\n\n    var POINTER_ELEMENT_EVENTS = 'pointerdown';\n    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\n    if (window.MSPointerEvent && !window.PointerEvent) {\n        POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n        POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n    }\n\n    /**\n     * Pointer events input\n     * @constructor\n     * @extends Input\n     */\n    function PointerEventInput() {\n        this.evEl = POINTER_ELEMENT_EVENTS;\n        this.evWin = POINTER_WINDOW_EVENTS;\n\n        Input.apply(this, arguments);\n\n        this.store = (this.manager.session.pointerEvents = []);\n    }\n\n    inherit(PointerEventInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function PEhandler(ev) {\n            var store = this.store;\n            var removePointer = false;\n\n            var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n            var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n            var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n            var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n            // get index of the event in the store\n            var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n            // start and mouse must be down\n            if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n                if (storeIndex < 0) {\n                    store.push(ev);\n                    storeIndex = store.length - 1;\n                }\n            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n                removePointer = true;\n            }\n\n            // it not found, so the pointer hasn't been down (so it's probably a hover)\n            if (storeIndex < 0) {\n                return;\n            }\n\n            // update the event in the store\n            store[storeIndex] = ev;\n\n            this.callback(this.manager, eventType, {\n                pointers: store,\n                changedPointers: [ev],\n                pointerType: pointerType,\n                srcEvent: ev\n            });\n\n            if (removePointer) {\n                // remove from the store\n                store.splice(storeIndex, 1);\n            }\n        }\n    });\n\n    var SINGLE_TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Touch events input\n     * @constructor\n     * @extends Input\n     */\n    function SingleTouchInput() {\n        this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n        this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n        this.started = false;\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(SingleTouchInput, Input, {\n        handler: function TEhandler(ev) {\n            var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n            // should we handle the touch events?\n            if (type === INPUT_START) {\n                this.started = true;\n            }\n\n            if (!this.started) {\n                return;\n            }\n\n            var touches = normalizeSingleTouches.call(this, ev, type);\n\n            // when done, reset the started state\n            if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n                this.started = false;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function normalizeSingleTouches(ev, type) {\n        var all = toArray(ev.touches);\n        var changed = toArray(ev.changedTouches);\n\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            all = uniqueArray(all.concat(changed), 'identifier', true);\n        }\n\n        return [all, changed];\n    }\n\n    var TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Multi-user touch events input\n     * @constructor\n     * @extends Input\n     */\n    function TouchInput() {\n        this.evTarget = TOUCH_TARGET_EVENTS;\n        this.targetIds = {};\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(TouchInput, Input, {\n        handler: function MTEhandler(ev) {\n            var type = TOUCH_INPUT_MAP[ev.type];\n            var touches = getTouches.call(this, ev, type);\n            if (!touches) {\n                return;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function getTouches(ev, type) {\n        var allTouches = toArray(ev.touches);\n        var targetIds = this.targetIds;\n\n        // when there is only one touch, the process can be simplified\n        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n            targetIds[allTouches[0].identifier] = true;\n            return [allTouches, allTouches];\n        }\n\n        var i,\n            targetTouches,\n            changedTouches = toArray(ev.changedTouches),\n            changedTargetTouches = [],\n            target = this.target;\n\n        // get target touches from touches\n        targetTouches = allTouches.filter(function (touch) {\n            return hasParent(touch.target, target);\n        });\n\n        // collect touches\n        if (type === INPUT_START) {\n            i = 0;\n            while (i < targetTouches.length) {\n                targetIds[targetTouches[i].identifier] = true;\n                i++;\n            }\n        }\n\n        // filter changed touches to only contain touches that exist in the collected target ids\n        i = 0;\n        while (i < changedTouches.length) {\n            if (targetIds[changedTouches[i].identifier]) {\n                changedTargetTouches.push(changedTouches[i]);\n            }\n\n            // cleanup removed touches\n            if (type & (INPUT_END | INPUT_CANCEL)) {\n                delete targetIds[changedTouches[i].identifier];\n            }\n            i++;\n        }\n\n        if (!changedTargetTouches.length) {\n            return;\n        }\n\n        return [\n            // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n            uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n            changedTargetTouches\n        ];\n    }\n\n    /**\n     * Combined touch and mouse input\n     *\n     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n     * This because touch devices also emit mouse events while doing a touch.\n     *\n     * @constructor\n     * @extends Input\n     */\n\n    var DEDUP_TIMEOUT = 2500;\n    var DEDUP_DISTANCE = 25;\n\n    function TouchMouseInput() {\n        Input.apply(this, arguments);\n\n        var handler = bindFn(this.handler, this);\n        this.touch = new TouchInput(this.manager, handler);\n        this.mouse = new MouseInput(this.manager, handler);\n\n        this.primaryTouch = null;\n        this.lastTouches = [];\n    }\n\n    inherit(TouchMouseInput, Input, {\n        /**\n         * handle mouse and touch events\n         * @param {Hammer} manager\n         * @param {String} inputEvent\n         * @param {Object} inputData\n         */\n        handler: function TMEhandler(manager, inputEvent, inputData) {\n            var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n                isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n            if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n                return;\n            }\n\n            // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n            if (isTouch) {\n                recordTouches.call(this, inputEvent, inputData);\n            } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n                return;\n            }\n\n            this.callback(manager, inputEvent, inputData);\n        },\n\n        /**\n         * remove the event listeners\n         */\n        destroy: function destroy() {\n            this.touch.destroy();\n            this.mouse.destroy();\n        }\n    });\n\n    function recordTouches(eventType, eventData) {\n        if (eventType & INPUT_START) {\n            this.primaryTouch = eventData.changedPointers[0].identifier;\n            setLastTouch.call(this, eventData);\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            setLastTouch.call(this, eventData);\n        }\n    }\n\n    function setLastTouch(eventData) {\n        var touch = eventData.changedPointers[0];\n\n        if (touch.identifier === this.primaryTouch) {\n            var lastTouch = {x: touch.clientX, y: touch.clientY};\n            this.lastTouches.push(lastTouch);\n            var lts = this.lastTouches;\n            var removeLastTouch = function () {\n                var i = lts.indexOf(lastTouch);\n                if (i > -1) {\n                    lts.splice(i, 1);\n                }\n            };\n            setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n        }\n    }\n\n    function isSyntheticEvent(eventData) {\n        var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n        for (var i = 0; i < this.lastTouches.length; i++) {\n            var t = this.lastTouches[i];\n            var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n            if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\n    var TOUCH_ACTION_COMPUTE = 'compute';\n    var TOUCH_ACTION_AUTO = 'auto';\n    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n    var TOUCH_ACTION_NONE = 'none';\n    var TOUCH_ACTION_PAN_X = 'pan-x';\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\n    var TOUCH_ACTION_MAP = getTouchActionProps();\n\n    /**\n     * Touch Action\n     * sets the touchAction property or uses the js alternative\n     * @param {Manager} manager\n     * @param {String} value\n     * @constructor\n     */\n    function TouchAction(manager, value) {\n        this.manager = manager;\n        this.set(value);\n    }\n\n    TouchAction.prototype = {\n        /**\n         * set the touchAction value on the element or enable the polyfill\n         * @param {String} value\n         */\n        set: function (value) {\n            // find out the touch-action by the event handlers\n            if (value == TOUCH_ACTION_COMPUTE) {\n                value = this.compute();\n            }\n\n            if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n                this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n            }\n            this.actions = value.toLowerCase().trim();\n        },\n\n        /**\n         * just re-set the touchAction value\n         */\n        update: function () {\n            this.set(this.manager.options.touchAction);\n        },\n\n        /**\n         * compute the value for the touchAction property based on the recognizer's settings\n         * @returns {String} value\n         */\n        compute: function () {\n            var actions = [];\n            each(this.manager.recognizers, function (recognizer) {\n                if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                    actions = actions.concat(recognizer.getTouchAction());\n                }\n            });\n            return cleanTouchActions(actions.join(' '));\n        },\n\n        /**\n         * this method is called on each input cycle and provides the preventing of the browser behavior\n         * @param {Object} input\n         */\n        preventDefaults: function (input) {\n            var srcEvent = input.srcEvent;\n            var direction = input.offsetDirection;\n\n            // if the touch action did prevented once this session\n            if (this.manager.session.prevented) {\n                srcEvent.preventDefault();\n                return;\n            }\n\n            var actions = this.actions;\n            var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n            if (hasNone) {\n                //do not prevent defaults if this is a tap gesture\n\n                var isTapPointer = input.pointers.length === 1;\n                var isTapMovement = input.distance < 2;\n                var isTapTouchTime = input.deltaTime < 250;\n\n                if (isTapPointer && isTapMovement && isTapTouchTime) {\n                    return;\n                }\n            }\n\n            if (hasPanX && hasPanY) {\n                // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n                return;\n            }\n\n            if (hasNone ||\n                (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n                (hasPanX && direction & DIRECTION_VERTICAL)) {\n                return this.preventSrc(srcEvent);\n            }\n        },\n\n        /**\n         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n         * @param {Object} srcEvent\n         */\n        preventSrc: function (srcEvent) {\n            this.manager.session.prevented = true;\n            srcEvent.preventDefault();\n        }\n    };\n\n    /**\n     * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n     * @param {String} actions\n     * @returns {*}\n     */\n    function cleanTouchActions(actions) {\n        // none\n        if (inStr(actions, TOUCH_ACTION_NONE)) {\n            return TOUCH_ACTION_NONE;\n        }\n\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n        // if both pan-x and pan-y are set (different recognizers\n        // for different directions, e.g. horizontal pan but vertical swipe?)\n        // we need none (as otherwise with pan-x pan-y combined none of these\n        // recognizers will work, since the browser would handle all panning\n        if (hasPanX && hasPanY) {\n            return TOUCH_ACTION_NONE;\n        }\n\n        // pan-x OR pan-y\n        if (hasPanX || hasPanY) {\n            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n        }\n\n        // manipulation\n        if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n            return TOUCH_ACTION_MANIPULATION;\n        }\n\n        return TOUCH_ACTION_AUTO;\n    }\n\n    function getTouchActionProps() {\n        if (!NATIVE_TOUCH_ACTION) {\n            return false;\n        }\n        var touchMap = {};\n        var cssSupports = window.CSS && window.CSS.supports;\n        ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n\n            // If css.supports is not supported but there is native touch-action assume it supports\n            // all values. This is the case for IE 10 and 11.\n            touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n        });\n        return touchMap;\n    }\n\n    /**\n     * Recognizer flow explained; *\n     * All recognizers have the initial state of POSSIBLE when a input session starts.\n     * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n     * Example session for mouse-input: mousedown -> mousemove -> mouseup\n     *\n     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n     * which determines with state it should be.\n     *\n     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n     * POSSIBLE to give it another change on the next cycle.\n     *\n     *               Possible\n     *                  |\n     *            +-----+---------------+\n     *            |                     |\n     *      +-----+-----+               |\n     *      |           |               |\n     *   Failed      Cancelled          |\n     *                          +-------+------+\n     *                          |              |\n     *                      Recognized       Began\n     *                                         |\n     *                                      Changed\n     *                                         |\n     *                                  Ended/Recognized\n     */\n    var STATE_POSSIBLE = 1;\n    var STATE_BEGAN = 2;\n    var STATE_CHANGED = 4;\n    var STATE_ENDED = 8;\n    var STATE_RECOGNIZED = STATE_ENDED;\n    var STATE_CANCELLED = 16;\n    var STATE_FAILED = 32;\n\n    /**\n     * Recognizer\n     * Every recognizer needs to extend from this class.\n     * @constructor\n     * @param {Object} options\n     */\n    function Recognizer(options) {\n        this.options = assign({}, this.defaults, options || {});\n\n        this.id = uniqueId();\n\n        this.manager = null;\n\n        // default is enable true\n        this.options.enable = ifUndefined(this.options.enable, true);\n\n        this.state = STATE_POSSIBLE;\n\n        this.simultaneous = {};\n        this.requireFail = [];\n    }\n\n    Recognizer.prototype = {\n        /**\n         * @virtual\n         * @type {Object}\n         */\n        defaults: {},\n\n        /**\n         * set options\n         * @param {Object} options\n         * @return {Recognizer}\n         */\n        set: function (options) {\n            assign(this.options, options);\n\n            // also update the touchAction, in case something changed about the directions/enabled state\n            this.manager && this.manager.touchAction.update();\n            return this;\n        },\n\n        /**\n         * recognize simultaneous with an other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        recognizeWith: function (otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n                return this;\n            }\n\n            var simultaneous = this.simultaneous;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (!simultaneous[otherRecognizer.id]) {\n                simultaneous[otherRecognizer.id] = otherRecognizer;\n                otherRecognizer.recognizeWith(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRecognizeWith: function (otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            delete this.simultaneous[otherRecognizer.id];\n            return this;\n        },\n\n        /**\n         * recognizer can only run when an other is failing\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        requireFailure: function (otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n                return this;\n            }\n\n            var requireFail = this.requireFail;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (inArray(requireFail, otherRecognizer) === -1) {\n                requireFail.push(otherRecognizer);\n                otherRecognizer.requireFailure(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the requireFailure link. it does not remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRequireFailure: function (otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            var index = inArray(this.requireFail, otherRecognizer);\n            if (index > -1) {\n                this.requireFail.splice(index, 1);\n            }\n            return this;\n        },\n\n        /**\n         * has require failures boolean\n         * @returns {boolean}\n         */\n        hasRequireFailures: function () {\n            return this.requireFail.length > 0;\n        },\n\n        /**\n         * if the recognizer can recognize simultaneous with an other recognizer\n         * @param {Recognizer} otherRecognizer\n         * @returns {Boolean}\n         */\n        canRecognizeWith: function (otherRecognizer) {\n            return !!this.simultaneous[otherRecognizer.id];\n        },\n\n        /**\n         * You should use `tryEmit` instead of `emit` directly to check\n         * that all the needed recognizers has failed before emitting.\n         * @param {Object} input\n         */\n        emit: function (input) {\n            var self = this;\n            var state = this.state;\n\n            function emit(event) {\n                self.manager.emit(event, input);\n            }\n\n            // 'panstart' and 'panmove'\n            if (state < STATE_ENDED) {\n                emit(self.options.event + stateStr(state));\n            }\n\n            emit(self.options.event); // simple 'eventName' events\n\n            if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n                emit(input.additionalEvent);\n            }\n\n            // panend and pancancel\n            if (state >= STATE_ENDED) {\n                emit(self.options.event + stateStr(state));\n            }\n        },\n\n        /**\n         * Check that all the require failure recognizers has failed,\n         * if true, it emits a gesture event,\n         * otherwise, setup the state to FAILED.\n         * @param {Object} input\n         */\n        tryEmit: function (input) {\n            if (this.canEmit()) {\n                return this.emit(input);\n            }\n            // it's failing anyway\n            this.state = STATE_FAILED;\n        },\n\n        /**\n         * can we emit?\n         * @returns {boolean}\n         */\n        canEmit: function () {\n            var i = 0;\n            while (i < this.requireFail.length) {\n                if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                    return false;\n                }\n                i++;\n            }\n            return true;\n        },\n\n        /**\n         * update the recognizer\n         * @param {Object} inputData\n         */\n        recognize: function (inputData) {\n            // make a new copy of the inputData\n            // so we can change the inputData without messing up the other recognizers\n            var inputDataClone = assign({}, inputData);\n\n            // is is enabled and allow recognizing?\n            if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n                this.reset();\n                this.state = STATE_FAILED;\n                return;\n            }\n\n            // reset when we've reached the end\n            if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n                this.state = STATE_POSSIBLE;\n            }\n\n            this.state = this.process(inputDataClone);\n\n            // the recognizer has recognized a gesture\n            // so trigger an event\n            if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n                this.tryEmit(inputDataClone);\n            }\n        },\n\n        /**\n         * return the state of the recognizer\n         * the actual recognizing happens in this method\n         * @virtual\n         * @param {Object} inputData\n         * @returns {Const} STATE\n         */\n        process: function (inputData) {\n        }, // jshint ignore:line\n\n        /**\n         * return the preferred touch-action\n         * @virtual\n         * @returns {Array}\n         */\n        getTouchAction: function () {\n        },\n\n        /**\n         * called when the gesture isn't allowed to recognize\n         * like when another is being recognized or it is disabled\n         * @virtual\n         */\n        reset: function () {\n        }\n    };\n\n    /**\n     * get a usable string, used as event postfix\n     * @param {Const} state\n     * @returns {String} state\n     */\n    function stateStr(state) {\n        if (state & STATE_CANCELLED) {\n            return 'cancel';\n        } else if (state & STATE_ENDED) {\n            return 'end';\n        } else if (state & STATE_CHANGED) {\n            return 'move';\n        } else if (state & STATE_BEGAN) {\n            return 'start';\n        }\n        return '';\n    }\n\n    /**\n     * direction cons to string\n     * @param {Const} direction\n     * @returns {String}\n     */\n    function directionStr(direction) {\n        if (direction == DIRECTION_DOWN) {\n            return 'down';\n        } else if (direction == DIRECTION_UP) {\n            return 'up';\n        } else if (direction == DIRECTION_LEFT) {\n            return 'left';\n        } else if (direction == DIRECTION_RIGHT) {\n            return 'right';\n        }\n        return '';\n    }\n\n    /**\n     * get a recognizer by name if it is bound to a manager\n     * @param {Recognizer|String} otherRecognizer\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer}\n     */\n    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n        var manager = recognizer.manager;\n        if (manager) {\n            return manager.get(otherRecognizer);\n        }\n        return otherRecognizer;\n    }\n\n    /**\n     * This recognizer is just used as a base for the simple attribute recognizers.\n     * @constructor\n     * @extends Recognizer\n     */\n    function AttrRecognizer() {\n        Recognizer.apply(this, arguments);\n    }\n\n    inherit(AttrRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof AttrRecognizer\n         */\n        defaults: {\n            /**\n             * @type {Number}\n             * @default 1\n             */\n            pointers: 1\n        },\n\n        /**\n         * Used to check if it the recognizer receives valid input, like input.distance > 10.\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {Boolean} recognized\n         */\n        attrTest: function (input) {\n            var optionPointers = this.options.pointers;\n            return optionPointers === 0 || input.pointers.length === optionPointers;\n        },\n\n        /**\n         * Process the input and return the state for the recognizer\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {*} State\n         */\n        process: function (input) {\n            var state = this.state;\n            var eventType = input.eventType;\n\n            var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n            var isValid = this.attrTest(input);\n\n            // on cancel input and we've recognized before, return STATE_CANCELLED\n            if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n                return state | STATE_CANCELLED;\n            } else if (isRecognized || isValid) {\n                if (eventType & INPUT_END) {\n                    return state | STATE_ENDED;\n                } else if (!(state & STATE_BEGAN)) {\n                    return STATE_BEGAN;\n                }\n                return state | STATE_CHANGED;\n            }\n            return STATE_FAILED;\n        }\n    });\n\n    /**\n     * Pan\n     * Recognized when the pointer is down and moved in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PanRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n\n        this.pX = null;\n        this.pY = null;\n    }\n\n    inherit(PanRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PanRecognizer\n         */\n        defaults: {\n            event: 'pan',\n            threshold: 10,\n            pointers: 1,\n            direction: DIRECTION_ALL\n        },\n\n        getTouchAction: function () {\n            var direction = this.options.direction;\n            var actions = [];\n            if (direction & DIRECTION_HORIZONTAL) {\n                actions.push(TOUCH_ACTION_PAN_Y);\n            }\n            if (direction & DIRECTION_VERTICAL) {\n                actions.push(TOUCH_ACTION_PAN_X);\n            }\n            return actions;\n        },\n\n        directionTest: function (input) {\n            var options = this.options;\n            var hasMoved = true;\n            var distance = input.distance;\n            var direction = input.direction;\n            var x = input.deltaX;\n            var y = input.deltaY;\n\n            // lock to axis?\n            if (!(direction & options.direction)) {\n                if (options.direction & DIRECTION_HORIZONTAL) {\n                    direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                    hasMoved = x != this.pX;\n                    distance = Math.abs(input.deltaX);\n                } else {\n                    direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                    hasMoved = y != this.pY;\n                    distance = Math.abs(input.deltaY);\n                }\n            }\n            input.direction = direction;\n            return hasMoved && distance > options.threshold && direction & options.direction;\n        },\n\n        attrTest: function (input) {\n            return AttrRecognizer.prototype.attrTest.call(this, input) &&\n                (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n        },\n\n        emit: function (input) {\n\n            this.pX = input.deltaX;\n            this.pY = input.deltaY;\n\n            var direction = directionStr(input.direction);\n\n            if (direction) {\n                input.additionalEvent = this.options.event + direction;\n            }\n            this._super.emit.call(this, input);\n        }\n    });\n\n    /**\n     * Pinch\n     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PinchRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(PinchRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'pinch',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function () {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function (input) {\n            return this._super.attrTest.call(this, input) &&\n                (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n        },\n\n        emit: function (input) {\n            if (input.scale !== 1) {\n                var inOut = input.scale < 1 ? 'in' : 'out';\n                input.additionalEvent = this.options.event + inOut;\n            }\n            this._super.emit.call(this, input);\n        }\n    });\n\n    /**\n     * Press\n     * Recognized when the pointer is down for x ms without any movement.\n     * @constructor\n     * @extends Recognizer\n     */\n    function PressRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        this._timer = null;\n        this._input = null;\n    }\n\n    inherit(PressRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PressRecognizer\n         */\n        defaults: {\n            event: 'press',\n            pointers: 1,\n            time: 251, // minimal time of the pointer to be pressed\n            threshold: 9 // a minimal movement is ok, but keep it low\n        },\n\n        getTouchAction: function () {\n            return [TOUCH_ACTION_AUTO];\n        },\n\n        process: function (input) {\n            var options = this.options;\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTime = input.deltaTime > options.time;\n\n            this._input = input;\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n                this.reset();\n            } else if (input.eventType & INPUT_START) {\n                this.reset();\n                this._timer = setTimeoutContext(function () {\n                    this.state = STATE_RECOGNIZED;\n                    this.tryEmit();\n                }, options.time, this);\n            } else if (input.eventType & INPUT_END) {\n                return STATE_RECOGNIZED;\n            }\n            return STATE_FAILED;\n        },\n\n        reset: function () {\n            clearTimeout(this._timer);\n        },\n\n        emit: function (input) {\n            if (this.state !== STATE_RECOGNIZED) {\n                return;\n            }\n\n            if (input && (input.eventType & INPUT_END)) {\n                this.manager.emit(this.options.event + 'up', input);\n            } else {\n                this._input.timeStamp = now();\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Rotate\n     * Recognized when two or more pointer are moving in a circular motion.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function RotateRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(RotateRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof RotateRecognizer\n         */\n        defaults: {\n            event: 'rotate',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function () {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function (input) {\n            return this._super.attrTest.call(this, input) &&\n                (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n        }\n    });\n\n    /**\n     * Swipe\n     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function SwipeRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(SwipeRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof SwipeRecognizer\n         */\n        defaults: {\n            event: 'swipe',\n            threshold: 10,\n            velocity: 0.3,\n            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n            pointers: 1\n        },\n\n        getTouchAction: function () {\n            return PanRecognizer.prototype.getTouchAction.call(this);\n        },\n\n        attrTest: function (input) {\n            var direction = this.options.direction;\n            var velocity;\n\n            if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n                velocity = input.overallVelocity;\n            } else if (direction & DIRECTION_HORIZONTAL) {\n                velocity = input.overallVelocityX;\n            } else if (direction & DIRECTION_VERTICAL) {\n                velocity = input.overallVelocityY;\n            }\n\n            return this._super.attrTest.call(this, input) &&\n                direction & input.offsetDirection &&\n                input.distance > this.options.threshold &&\n                input.maxPointers == this.options.pointers &&\n                abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n        },\n\n        emit: function (input) {\n            var direction = directionStr(input.offsetDirection);\n            if (direction) {\n                this.manager.emit(this.options.event + direction, input);\n            }\n\n            this.manager.emit(this.options.event, input);\n        }\n    });\n\n    /**\n     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n     * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n     * a single tap.\n     *\n     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n     * multi-taps being recognized.\n     * @constructor\n     * @extends Recognizer\n     */\n    function TapRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        // previous time and center,\n        // used for tap counting\n        this.pTime = false;\n        this.pCenter = false;\n\n        this._timer = null;\n        this._input = null;\n        this.count = 0;\n    }\n\n    inherit(TapRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'tap',\n            pointers: 1,\n            taps: 1,\n            interval: 300, // max time between the multi-tap taps\n            time: 250, // max time of the pointer to be down (like finger on the screen)\n            threshold: 9, // a minimal movement is ok, but keep it low\n            posThreshold: 10 // a multi-tap can be a bit off the initial position\n        },\n\n        getTouchAction: function () {\n            return [TOUCH_ACTION_MANIPULATION];\n        },\n\n        process: function (input) {\n            var options = this.options;\n\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTouchTime = input.deltaTime < options.time;\n\n            this.reset();\n\n            if ((input.eventType & INPUT_START) && (this.count === 0)) {\n                return this.failTimeout();\n            }\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (validMovement && validTouchTime && validPointers) {\n                if (input.eventType != INPUT_END) {\n                    return this.failTimeout();\n                }\n\n                var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n                var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n                this.pTime = input.timeStamp;\n                this.pCenter = input.center;\n\n                if (!validMultiTap || !validInterval) {\n                    this.count = 1;\n                } else {\n                    this.count += 1;\n                }\n\n                this._input = input;\n\n                // if tap count matches we have recognized it,\n                // else it has began recognizing...\n                var tapCount = this.count % options.taps;\n                if (tapCount === 0) {\n                    // no failing requirements, immediately trigger the tap event\n                    // or wait as long as the multitap interval to trigger\n                    if (!this.hasRequireFailures()) {\n                        return STATE_RECOGNIZED;\n                    } else {\n                        this._timer = setTimeoutContext(function () {\n                            this.state = STATE_RECOGNIZED;\n                            this.tryEmit();\n                        }, options.interval, this);\n                        return STATE_BEGAN;\n                    }\n                }\n            }\n            return STATE_FAILED;\n        },\n\n        failTimeout: function () {\n            this._timer = setTimeoutContext(function () {\n                this.state = STATE_FAILED;\n            }, this.options.interval, this);\n            return STATE_FAILED;\n        },\n\n        reset: function () {\n            clearTimeout(this._timer);\n        },\n\n        emit: function () {\n            if (this.state == STATE_RECOGNIZED) {\n                this._input.tapCount = this.count;\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Simple way to create a manager with a default set of recognizers.\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Hammer(element, options) {\n        options = options || {};\n        options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n        return new Manager(element, options);\n    }\n\n    /**\n     * @const {string}\n     */\n    Hammer.VERSION = '2.0.8';\n\n    /**\n     * default settings\n     * @namespace\n     */\n    Hammer.defaults = {\n        /**\n         * set if DOM events are being triggered.\n         * But this is slower and unused by simple implementations, so disabled by default.\n         * @type {Boolean}\n         * @default false\n         */\n        domEvents: false,\n\n        /**\n         * The value for the touchAction property/fallback.\n         * When set to `compute` it will magically set the correct value based on the added recognizers.\n         * @type {String}\n         * @default compute\n         */\n        touchAction: TOUCH_ACTION_COMPUTE,\n\n        /**\n         * @type {Boolean}\n         * @default true\n         */\n        enable: true,\n\n        /**\n         * EXPERIMENTAL FEATURE -- can be removed/changed\n         * Change the parent input target element.\n         * If Null, then it is being set the to main element.\n         * @type {Null|EventTarget}\n         * @default null\n         */\n        inputTarget: null,\n\n        /**\n         * force an input class\n         * @type {Null|Function}\n         * @default null\n         */\n        inputClass: null,\n\n        /**\n         * Default recognizer setup when calling `Hammer()`\n         * When creating a new Manager these will be skipped.\n         * @type {Array}\n         */\n        preset: [\n            // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n            [RotateRecognizer, {enable: false}],\n            [PinchRecognizer, {enable: false}, ['rotate']],\n            [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n            [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n            [TapRecognizer],\n            [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n            [PressRecognizer]\n        ],\n\n        /**\n         * Some CSS properties can be used to improve the working of Hammer.\n         * Add them to this method and they will be set when creating a new Manager.\n         * @namespace\n         */\n        cssProps: {\n            /**\n             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userSelect: 'none',\n\n            /**\n             * Disable the Windows Phone grippers when pressing an element.\n             * @type {String}\n             * @default 'none'\n             */\n            touchSelect: 'none',\n\n            /**\n             * Disables the default callout shown when you touch and hold a touch target.\n             * On iOS, when you touch and hold a touch target such as a link, Safari displays\n             * a callout containing information about the link. This property allows you to disable that callout.\n             * @type {String}\n             * @default 'none'\n             */\n            touchCallout: 'none',\n\n            /**\n             * Specifies whether zooming is enabled. Used by IE10>\n             * @type {String}\n             * @default 'none'\n             */\n            contentZooming: 'none',\n\n            /**\n             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userDrag: 'none',\n\n            /**\n             * Overrides the highlight color shown when the user taps a link or a JavaScript\n             * clickable element in iOS. This property obeys the alpha value, if specified.\n             * @type {String}\n             * @default 'rgba(0,0,0,0)'\n             */\n            tapHighlightColor: 'rgba(0,0,0,0)'\n        }\n    };\n\n    var STOP = 1;\n    var FORCED_STOP = 2;\n\n    /**\n     * Manager\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Manager(element, options) {\n        this.options = assign({}, Hammer.defaults, options || {});\n\n        this.options.inputTarget = this.options.inputTarget || element;\n\n        this.handlers = {};\n        this.session = {};\n        this.recognizers = [];\n        this.oldCssProps = {};\n\n        this.element = element;\n        this.input = createInputInstance(this);\n        this.touchAction = new TouchAction(this, this.options.touchAction);\n\n        toggleCssProps(this, true);\n\n        each(this.options.recognizers, function (item) {\n            var recognizer = this.add(new (item[0])(item[1]));\n            item[2] && recognizer.recognizeWith(item[2]);\n            item[3] && recognizer.requireFailure(item[3]);\n        }, this);\n    }\n\n    Manager.prototype = {\n        /**\n         * set options\n         * @param {Object} options\n         * @returns {Manager}\n         */\n        set: function (options) {\n            assign(this.options, options);\n\n            // Options that need a little more setup\n            if (options.touchAction) {\n                this.touchAction.update();\n            }\n            if (options.inputTarget) {\n                // Clean up existing event listeners and reinitialize\n                this.input.destroy();\n                this.input.target = options.inputTarget;\n                this.input.init();\n            }\n            return this;\n        },\n\n        /**\n         * stop recognizing for this session.\n         * This session will be discarded, when a new [input]start event is fired.\n         * When forced, the recognizer cycle is stopped immediately.\n         * @param {Boolean} [force]\n         */\n        stop: function (force) {\n            this.session.stopped = force ? FORCED_STOP : STOP;\n        },\n\n        /**\n         * run the recognizers!\n         * called by the inputHandler function on every movement of the pointers (touches)\n         * it walks through all the recognizers and tries to detect the gesture that is being made\n         * @param {Object} inputData\n         */\n        recognize: function (inputData) {\n            var session = this.session;\n            if (session.stopped) {\n                return;\n            }\n\n            // run the touch-action polyfill\n            this.touchAction.preventDefaults(inputData);\n\n            var recognizer;\n            var recognizers = this.recognizers;\n\n            // this holds the recognizer that is being recognized.\n            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n            // if no recognizer is detecting a thing, it is set to `null`\n            var curRecognizer = session.curRecognizer;\n\n            // reset when the last recognizer is recognized\n            // or when we're in a new session\n            if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n                curRecognizer = session.curRecognizer = null;\n            }\n\n            var i = 0;\n            while (i < recognizers.length) {\n                recognizer = recognizers[i];\n\n                // find out if we are allowed try to recognize the input for this one.\n                // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n                // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n                //      that is being recognized.\n                // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n                //      this can be setup with the `recognizeWith()` method on the recognizer.\n                if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                    recognizer.recognize(inputData);\n                } else {\n                    recognizer.reset();\n                }\n\n                // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n                // current active recognizer. but only if we don't already have an active recognizer\n                if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                    curRecognizer = session.curRecognizer = recognizer;\n                }\n                i++;\n            }\n        },\n\n        /**\n         * get a recognizer by its event name.\n         * @param {Recognizer|String} recognizer\n         * @returns {Recognizer|Null}\n         */\n        get: function (recognizer) {\n            if (recognizer instanceof Recognizer) {\n                return recognizer;\n            }\n\n            var recognizers = this.recognizers;\n            for (var i = 0; i < recognizers.length; i++) {\n                if (recognizers[i].options.event == recognizer) {\n                    return recognizers[i];\n                }\n            }\n            return null;\n        },\n\n        /**\n         * add a recognizer to the manager\n         * existing recognizers with the same event name will be removed\n         * @param {Recognizer} recognizer\n         * @returns {Recognizer|Manager}\n         */\n        add: function (recognizer) {\n            if (invokeArrayArg(recognizer, 'add', this)) {\n                return this;\n            }\n\n            // remove existing\n            var existing = this.get(recognizer.options.event);\n            if (existing) {\n                this.remove(existing);\n            }\n\n            this.recognizers.push(recognizer);\n            recognizer.manager = this;\n\n            this.touchAction.update();\n            return recognizer;\n        },\n\n        /**\n         * remove a recognizer by name or instance\n         * @param {Recognizer|String} recognizer\n         * @returns {Manager}\n         */\n        remove: function (recognizer) {\n            if (invokeArrayArg(recognizer, 'remove', this)) {\n                return this;\n            }\n\n            recognizer = this.get(recognizer);\n\n            // let's make sure this recognizer exists\n            if (recognizer) {\n                var recognizers = this.recognizers;\n                var index = inArray(recognizers, recognizer);\n\n                if (index !== -1) {\n                    recognizers.splice(index, 1);\n                    this.touchAction.update();\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * bind event\n         * @param {String} events\n         * @param {Function} handler\n         * @returns {EventEmitter} this\n         */\n        on: function (events, handler) {\n            if (events === undefined) {\n                return;\n            }\n            if (handler === undefined) {\n                return;\n            }\n\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                handlers[event] = handlers[event] || [];\n                handlers[event].push(handler);\n            });\n            return this;\n        },\n\n        /**\n         * unbind event, leave emit blank to remove all handlers\n         * @param {String} events\n         * @param {Function} [handler]\n         * @returns {EventEmitter} this\n         */\n        off: function (events, handler) {\n            if (events === undefined) {\n                return;\n            }\n\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                if (!handler) {\n                    delete handlers[event];\n                } else {\n                    handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n                }\n            });\n            return this;\n        },\n\n        /**\n         * emit event to the listeners\n         * @param {String} event\n         * @param {Object} data\n         */\n        emit: function (event, data) {\n            // we also want to trigger dom events\n            if (this.options.domEvents) {\n                triggerDomEvent(event, data);\n            }\n\n            // no handlers, so skip it all\n            var handlers = this.handlers[event] && this.handlers[event].slice();\n            if (!handlers || !handlers.length) {\n                return;\n            }\n\n            data.type = event;\n            data.preventDefault = function () {\n                data.srcEvent.preventDefault();\n            };\n\n            var i = 0;\n            while (i < handlers.length) {\n                handlers[i](data);\n                i++;\n            }\n        },\n\n        /**\n         * destroy the manager and unbinds all events\n         * it doesn't unbind dom events, that is the user own responsibility\n         */\n        destroy: function () {\n            this.element && toggleCssProps(this, false);\n\n            this.handlers = {};\n            this.session = {};\n            this.input.destroy();\n            this.element = null;\n        }\n    };\n\n    /**\n     * add/remove the css properties as defined in manager.options.cssProps\n     * @param {Manager} manager\n     * @param {Boolean} add\n     */\n    function toggleCssProps(manager, add) {\n        var element = manager.element;\n        if (!element.style) {\n            return;\n        }\n        var prop;\n        each(manager.options.cssProps, function (value, name) {\n            prop = prefixed(element.style, name);\n            if (add) {\n                manager.oldCssProps[prop] = element.style[prop];\n                element.style[prop] = value;\n            } else {\n                element.style[prop] = manager.oldCssProps[prop] || '';\n            }\n        });\n        if (!add) {\n            manager.oldCssProps = {};\n        }\n    }\n\n    /**\n     * trigger dom event\n     * @param {String} event\n     * @param {Object} data\n     */\n    function triggerDomEvent(event, data) {\n        var gestureEvent = document.createEvent('Event');\n        gestureEvent.initEvent(event, true, true);\n        gestureEvent.gesture = data;\n        data.target.dispatchEvent(gestureEvent);\n    }\n\n    assign(Hammer, {\n        INPUT_START: INPUT_START,\n        INPUT_MOVE: INPUT_MOVE,\n        INPUT_END: INPUT_END,\n        INPUT_CANCEL: INPUT_CANCEL,\n\n        STATE_POSSIBLE: STATE_POSSIBLE,\n        STATE_BEGAN: STATE_BEGAN,\n        STATE_CHANGED: STATE_CHANGED,\n        STATE_ENDED: STATE_ENDED,\n        STATE_RECOGNIZED: STATE_RECOGNIZED,\n        STATE_CANCELLED: STATE_CANCELLED,\n        STATE_FAILED: STATE_FAILED,\n\n        DIRECTION_NONE: DIRECTION_NONE,\n        DIRECTION_LEFT: DIRECTION_LEFT,\n        DIRECTION_RIGHT: DIRECTION_RIGHT,\n        DIRECTION_UP: DIRECTION_UP,\n        DIRECTION_DOWN: DIRECTION_DOWN,\n        DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n        DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n        DIRECTION_ALL: DIRECTION_ALL,\n\n        Manager: Manager,\n        Input: Input,\n        TouchAction: TouchAction,\n\n        TouchInput: TouchInput,\n        MouseInput: MouseInput,\n        PointerEventInput: PointerEventInput,\n        TouchMouseInput: TouchMouseInput,\n        SingleTouchInput: SingleTouchInput,\n\n        Recognizer: Recognizer,\n        AttrRecognizer: AttrRecognizer,\n        Tap: TapRecognizer,\n        Pan: PanRecognizer,\n        Swipe: SwipeRecognizer,\n        Pinch: PinchRecognizer,\n        Rotate: RotateRecognizer,\n        Press: PressRecognizer,\n\n        on: addEventListeners,\n        off: removeEventListeners,\n        each: each,\n        merge: merge,\n        extend: extend,\n        assign: assign,\n        inherit: inherit,\n        bindFn: bindFn,\n        prefixed: prefixed\n    });\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\n    var freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\n    freeGlobal.Hammer = Hammer;\n\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return Hammer;\n        });\n    } else if (typeof module != 'undefined' && module.exports) {\n        module.exports = Hammer;\n    } else {\n        window[exportName] = Hammer;\n    }\n})(window, document, 'Hammer');\n\nexport default window.Hammer;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/hammer.js","import ImageViewer from './core/imageViewer';\nimport css from './css/index.css';\n\nwindow.ImageViewer = ImageViewer;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {\n    debug\n} from '../common/debug';\nimport {\n    query,\n    removeElement,\n    setTranslateStyle\n} from '../common/dom';\nimport {\n    LOCK_NAME,\n    ITEM_ANIMATION_CLASS\n} from '../common/profile';\nimport lock from '../common/lock';\nimport Hammer from '../lib/hammer';\nimport Viewer from './viewer';\n\nclass ImageViewer {\n    constructor(images = [], opt = {}) {\n        this.opt = opt;\n        this.el = null;\n        this.headerEl = null;\n        this.bodyEl = null;\n        this.footerEl = null;\n        this.currentNumberEl = null;\n        this.totalNumberEl = null;\n        this.images = images; //图片数据\n        this.imagesLength = images.length; //图片数据\n        this.container = opt.container || 'body';\n        this.enableScale = opt.enableScale === undefined ? true : opt.enableScale;//是否开启图片缩放功能\n        this.currentIndex = opt.startIndex || 0; //起始坐标，从0开始\n        this.viewers = [];\n        this.scaleStart = 1;\n        this.width = 0;\n        this.height = 0;\n        this.itemList = [];//各个图片容器元素的dom节点\n        this.hammer = null;\n        this.deltaX = 0;\n        this.translateX = 0;\n    }\n\n    _create() {\n        this.el = query('.image-viewer')[0];\n        this.destroy();\n        let imageViewerTemplate =\n            `<div class=\"image-viewer\">\n                <div class=\"image-header\"></div>\n                <div class=\"image-body\">\n                    <div class=\"viewer\"><div class=\"panel\"><img></div></div>\n                    <div class=\"viewer\"><div class=\"panel\"><img></div></div>\n                    <div class=\"viewer\"><div class=\"panel\"><img></div></div>\n                </div>\n                <div class=\"image-footer\"></div>\n            </div>`;\n\n        let divEl = document.createElement('div');\n        divEl.innerHTML = imageViewerTemplate;\n        this.el = divEl.firstElementChild;\n        query(this.container)[0].appendChild(this.el);\n        this.headerEl = query('.image-header', this.el)[0];\n        this.bodyEl = query('.image-body', this.el)[0];\n        this.footerEl = query('.image-footer', this.el)[0];\n        this.itemList = query('.image-body', this.el)[0].children;\n        this.width = this.el.clientWidth;\n        this.height = this.el.clientHeight;\n\n        if (this.opt.headerRender) {\n            this.headerEl.innerHTML = this.opt.headerRender();\n        }\n        if (this.opt.footerRender) {\n            this.footerEl.innerHTML = this.opt.footerRender();\n        }\n        this.currentNumberEl = query('.number-current', this.el)[0];//当前滑动所在的图片下标的元素节点\n        this.totalNumberEl = query('.number-total', this.el)[0];//图片总数的元素节点\n    }\n\n    _init() {\n        this.viewers = [];\n        for (let i = 0, length = this.itemList.length, item; i < length; i++) {\n            item = this.itemList[i];\n            this.viewers.push(new Viewer(this, item, this.width, this.height, i));\n        }\n        this.swipeInByIndex(this.currentIndex);\n        lock.createLock(LOCK_NAME);\n    }\n\n    _updateCountElement() {\n        if (this.currentNumberEl) {\n            this.currentNumberEl.innerText = this.currentIndex + 1;\n        }\n        if (this.totalNumberEl) {\n            this.totalNumberEl.innerText = this.imagesLength;\n        }\n    }\n\n    _bindEvent() {\n        let mc = new Hammer.Manager(this.el);\n        let hPinch = new Hammer.Pinch(),//前缀h代表hammer\n            hPan = new Hammer.Pan({direction: Hammer.DIRECTION_HORIZONTAL}),\n            hTap = new Hammer.Tap({taps: 2});\n        mc.add([hPinch, hPan, hTap]);\n        mc.on('panstart', this._dealWithMoveActionStart.bind(this));\n        mc.on('panmove', this._dealWithMoveAction.bind(this));\n        mc.on('panend', this._dealWithMoveActionEnd.bind(this));\n        if (this.enableScale) {\n            mc.on('tap', this.reset.bind(this));\n            mc.on('pinchstart', this._dealWithScaleActionStart.bind(this));\n            mc.on('pinch', this._dealWithScaleAction.bind(this));\n            mc.on('pinchend', this._dealWithScaleActionEnd.bind(this));\n        }\n        this.hammer = mc;\n    }\n\n    _dealWithMoveActionStart(event) {\n        if (lock.getLockState(LOCK_NAME))return;\n        this.bodyEl.classList.remove(ITEM_ANIMATION_CLASS);\n        this.opt.beforeSwipe && this.opt.beforeSwipe(this.currentIndex);\n        this.deltaX = event.deltaX;\n        this.bodyEl.style.willChange = 'transform';\n    }\n\n    _dealWithMoveAction(event, force) {\n        if (lock.getLockState(LOCK_NAME) && !force)return;\n        force && this.bodyEl.classList.remove(ITEM_ANIMATION_CLASS);\n        let distance = event.deltaX - this.deltaX;\n        setTranslateStyle(this.bodyEl, this.translateX + distance, 0);\n    }\n\n    _dealWithMoveActionEnd(event, force) {\n        if (lock.getLockState(LOCK_NAME) && !force)return;\n        let distance = event.deltaX - this.deltaX, needSwipe = false, needBreak = false;\n\n        if (this.currentIndex === 0 && distance > 0 && this.opt.swipeFirstRight) {\n            //当前图片是第一张，并且向右滑动\n            needBreak = this.opt.swipeFirstRight(this, Math.abs(distance));\n        } else if (this.currentIndex === (this.imagesLength - 1) && distance < 0 && this.opt.swipeLastLeft) {\n            //当前图片是最后一张，并且向左滑动\n            needBreak = this.opt.swipeLastLeft(this, Math.abs(distance));\n        }\n\n        if (!needBreak) {\n            distance !== 0 && this.bodyEl.classList.add(ITEM_ANIMATION_CLASS);\n            if (distance !== 0 && this._checkDistance(distance)) {\n                this.viewers.forEach((viewer) => {\n                    viewer.removeAnimation();\n                });\n                needSwipe = distance > 0 ? this.swipeToPrev() : this.swipeToNext();\n                this._updateCountElement();\n            } else {\n                setTranslateStyle(this.bodyEl, this.translateX, 0);\n            }\n            this.opt.afterSwipe && this.opt.afterSwipe(this.currentIndex);\n        }\n        this.deltaX = 0;\n        this.bodyEl.style.willChange = 'auto';\n        return needSwipe;\n    }\n\n    _dealWithScaleActionStart(event) {\n        this.scaleStart = event.scale;\n        this.viewers[1]._pinchStart();\n    }\n\n    _dealWithScaleAction(event) {\n        this.viewers[1]._pinch(event.scale - this.scaleStart);\n    }\n\n    _dealWithScaleActionEnd() {\n        this.viewers[1]._pinchEnd();\n    }\n\n    _checkDistance(distance = 0) {\n        return Math.abs(distance) > this.width / 5;\n    }\n\n    _getPrevImage() {\n        let minuend = this.currentIndex;\n        if (this.opt.loop && this.imagesLength > 2) {\n            minuend = this.currentIndex === 0 ? this.imagesLength : this.currentIndex;\n        }\n        return this.images[minuend - 1] || '';\n    }\n\n    _getCurrentImage() {\n        return this.images[this.currentIndex] || '';\n    }\n\n    _getNextImage() {\n        let addend = this.currentIndex;\n        if (this.opt.loop && this.imagesLength > 2) {\n            addend = this.currentIndex === this.imagesLength - 1 ? -1 : this.currentIndex;\n        }\n        return this.images[addend + 1] || '';\n    }\n\n    _getSpecificImage(index) {\n        return this.images[index] || '';\n    }\n\n    /**\n     * 重置当前图片的缩放\n     */\n    reset() {\n        let viewer = this.viewers[1];\n        viewer.init(viewer.displayIndex, true, null, false);\n        setTimeout(() => {\n            lock.releaseLock(LOCK_NAME);\n        }, 0);\n    }\n\n    /**\n     * 移动循环队列\n     * @param direction 方向，0：队首移动到队尾，1：队尾移动到队首\n     * @returns {*}\n     */\n    loopViewers(direction) {\n        let viewer = null;\n        if (direction === 0) {\n            viewer = this.viewers.shift();\n            this.viewers.push(viewer);\n        } else if (direction === 1) {\n            viewer = this.viewers.pop();\n            this.viewers = [viewer].concat(this.viewers);\n        }\n        return viewer;\n    }\n\n    /**\n     * 滑动到上一张\n     * @returns {boolean}\n     */\n    swipeToPrev() {\n        let prevImage = this._getPrevImage();\n        if (prevImage) {\n            this.currentIndex--;\n            this.translateX += this.width;\n            setTranslateStyle(this.bodyEl, this.translateX, 0);\n\n            let image = this._getSpecificImage(this.currentIndex - 1);\n            if (image || this.currentIndex === 0) {\n                let viewer = this.loopViewers(1);\n                viewer.init(viewer.displayIndex - 3, true, null, true, image);\n            }\n            return true;\n        } else {\n            setTranslateStyle(this.bodyEl, this.translateX, 0);\n            return false;\n        }\n    }\n\n    /**\n     * 滑动到下一张\n     * @returns {boolean}\n     */\n    swipeToNext() {\n        let nextImage = this._getNextImage();\n        if (nextImage) {\n            this.currentIndex++;\n            this.translateX -= this.width;\n            setTranslateStyle(this.bodyEl, this.translateX, 0);\n\n            let image = this._getSpecificImage(this.currentIndex + 1);\n            if (image || this.currentIndex === this.imagesLength - 1) {\n                let viewer = this.loopViewers(0);\n                viewer.init(viewer.displayIndex + 3, true, null, true, image);\n            }\n            return true;\n        } else {\n            setTranslateStyle(this.bodyEl, this.translateX, 0);\n            return false;\n        }\n    }\n\n    /**\n     * 根据给定的下标移动到指定图片处\n     * @param index 数组下标，从0开始\n     */\n    swipeInByIndex(index) {\n        if (!isNaN(index) && -1 < index && index < this.imagesLength) {\n            this.currentIndex = index;\n            this.translateX = 0;\n            setTranslateStyle(this.bodyEl, 0, 0);\n\n            this.viewers = this.viewers.sort(function (a, b) {\n                return a.index < b.index;\n            });\n            this.viewers[0].init(-1, true, null, true, this._getPrevImage());\n            this.viewers[1].init(0, true, null, true, this._getCurrentImage());\n            this.viewers[2].init(1, true, null, true, this._getNextImage());\n\n            this._updateCountElement();\n        } else {\n            debug('illegal index!');\n        }\n    }\n\n    setImageOption(images = [], startIndex = 0) {\n        if (!images.length) {\n            debug('images array can not be empty!')\n        }\n        this.images = images;\n        this.imagesLength = images.length;\n        this.currentIndex = startIndex;\n        this._init();\n    }\n\n    destroy() {\n        this.el && removeElement(this.el);\n    }\n\n    close() {\n        if (this.el) {\n            this.el.style.display = 'none';\n        }\n    }\n\n    open(index) {\n        this.currentIndex = index === undefined ? this.currentIndex : index;\n        if (!this.el) {\n            //仅仅实例化，但尚未初始化\n            this._create();\n            this._init();\n            this._bindEvent();\n        } else {\n            this.swipeInByIndex(this.currentIndex);\n        }\n        this.el.style.display = 'block';\n    }\n}\n\nexport default ImageViewer;\n\n\n// WEBPACK FOOTER //\n// ./src/core/imageViewer.js","let debug = (msg) => {\n    window.console.log('[ImageViewer]:' + msg);\n};\n\nexport {\n    debug\n};\n\n\n// WEBPACK FOOTER //\n// ./src/common/debug.js","import {\n    query,\n    setTranslateStyle,\n    setScaleAndTranslateStyle\n} from '../common/dom';\nimport {\n    ITEM_ANIMATION_CLASS,\n    LOCK_NAME\n} from '../common/profile';\nimport lock from '../common/lock';\nimport Event from '../common/event';\nimport Hammer from '../lib/hammer';\n\nclass Viewer {\n    constructor(imageViewer, el, width, height, index) {\n        this.event = new Event(false);\n        this.imageViewer = imageViewer;\n        this.el = el;             //.viewer类\n        this.panelEl = el.firstElementChild;//.panel类\n        this.imageEl = query('img', this.el)[0];\n        this.src = '';\n        this.index = index;        //viewer排序用，记录原始的数组位置\n        this.displayIndex = 0;\n        this.width = width;\n        this.height = height;\n        this.realWidth = 0;\n        this.realHeight = 0;\n        this.translateX = 0;\n        this.translateY = 0;\n        this.scale = 1;            //缩放比例\n        this.currentScale = 1;     //当前正在缩放的倍数(临时保存,当事件结束后,会赋值回scale)\n        this.translatePanelX = 0;  //最终图片面板所在的X轴坐标\n        this.translatePanelY = 0;  //最终图片面板所在的Y轴坐标\n        this.currentPanelX = 0;    //当前图片面板所在的X轴坐标（手指尚未离开屏幕）\n        this.currentPanelY = 0;    //当前图片面板所在的Y轴坐标（手指尚未离开屏幕）\n        this.allowDistanceX = 0;   //图片放大后，允许拖动的最大X轴距离\n        this.allowDistanceY = 0;   //图片放大后，允许拖动的最大Y轴距离\n        this.needResetX = false;   //拖动图片超出边界时，需要重置一下x轴的坐标\n        this.needResetY = false;   //拖动图片超出边界时，需要重置一下y轴的坐标\n        this.deltaX = 0;           //存储起始的X轴偏移量\n        this.deltaY = 0;           //存储起始的Y轴偏移量\n        this.EVENT_NAME = 'IMG_LOAD_COMPLETE';\n        this._bindEvent();\n    }\n\n    init(displayIndex = 0, resetScale, fn, needLoad = true, src) {\n        const _initImage = () => {\n            if (resetScale) {\n                this.scale = 1;\n                this.allowDistanceX = this.allowDistanceY = 0;\n            }\n            if (needLoad) {\n                this.imageEl.style.display = '';\n            }\n            this.translatePanelX = 0;\n            this.translatePanelY = 0;\n            this.currentPanelX = 0;\n            this.currentPanelY = 0;\n            this.realWidth = this.panelEl.clientWidth * this.scale;\n            this.realHeight = this.panelEl.clientHeight * this.scale;\n            this.translateX = this.displayIndex * this.width;\n            this.translateY = -this.el.clientHeight / 2;\n            this.needResetX = this.needResetY = false;\n            setScaleAndTranslateStyle(this.panelEl, this.scale, this.translatePanelX, this.translatePanelY);\n            setTranslateStyle(this.el, this.translateX, this.translateY);\n            fn && fn.apply(this);\n        };\n        this.displayIndex = displayIndex;\n\n        if (needLoad) {\n            this.src = src;\n            this.imageEl.src = this.src;\n            this.imageEl.style.display = 'none';\n            this.event.on(this.EVENT_NAME, () => {\n                _initImage();\n            });\n            setTranslateStyle(this.el, this.displayIndex * this.width, this.translateY);\n        } else {\n            _initImage();\n        }\n        return this;\n    }\n\n    _bindEvent() {\n        let mc = new Hammer.Manager(this.panelEl);\n        mc.add(new Hammer.Pan());\n        mc.on('panstart', (event) => {\n            this.removeAnimation();\n            if (lock.getLockState(LOCK_NAME)) {\n                this.deltaX = event.deltaX;\n                this.deltaY = event.deltaY;\n            }\n        });\n        mc.on('panmove', (event) => {\n            if (lock.getLockState(LOCK_NAME)) {\n                event.preventDefault();\n                this._translatePanel(event.deltaX - this.deltaX, event.deltaY - this.deltaY);\n            }\n        });\n        mc.on('panend', (event) => {\n            if (lock.getLockState(LOCK_NAME)) {\n                this._translatePanelEnd(event.deltaX - this.deltaX);\n            }\n        });\n\n        this.imageEl.addEventListener('load', () => {\n            this.event.emit(this.EVENT_NAME);\n        }, false);\n    }\n\n    _pinchStart() {\n        this.removeAnimation();\n        this.panelEl.style.willChange = 'transform';\n    }\n\n    _pinch(scale) {\n        let currentScale = scale * this.scale + this.scale;\n        if (currentScale > 0.5 && currentScale < 8) {\n            this.currentScale = currentScale;\n            setScaleAndTranslateStyle(this.panelEl, this.currentScale, this.translatePanelX, this.translatePanelY);\n        }\n        return this;\n    }\n\n    _pinchEnd(scale) {\n        this.scale = isNaN(scale) ? this.currentScale : scale;\n        this.realWidth = this.panelEl.clientWidth * this.scale;\n        this.realHeight = this.panelEl.clientHeight * this.scale;\n        this.allowDistanceX = (this.realWidth - this.width) / 2 / this.scale + 2;\n        this.allowDistanceY = (this.realHeight - this.height) / 2 / this.scale + 2;\n        if (this.realWidth < this.width || this.realHeight < this.height) {\n            this.init(this.displayIndex, false, null, false);\n        }\n        if (this.isScale()) {\n            lock.getLock(LOCK_NAME);\n        } else {\n            lock.releaseLock(LOCK_NAME);\n        }\n        this.panelEl.style.willChange = 'auto';\n        return this;\n    }\n\n    _calculate(a, b) {\n        return a > 0 ? (a - b) : (a + b);\n    }\n\n    _translatePanel(translatePanelX, translatePanelY) {\n        let tempX = 0;\n        if (this.realWidth <= this.width && translatePanelX) {\n            this.imageViewer._dealWithMoveAction({deltaX: translatePanelX}, true);\n        } else {\n            if (this.allowDistanceX > 0 && translatePanelX) {\n                this.currentPanelX = translatePanelX / this.scale + this.translatePanelX;\n                this.needResetX = !(-this.allowDistanceX < this.currentPanelX && this.currentPanelX < this.allowDistanceX);\n            }\n\n            if (this.needResetX) {\n                this.imageViewer._dealWithMoveAction({deltaX: this._calculate(this.currentPanelX, this.allowDistanceX)}, true);\n                tempX = this.currentPanelX > 0 ? this.allowDistanceX : -this.allowDistanceX;\n            } else {\n                this.imageViewer._dealWithMoveAction({deltaX: 0}, true);\n                tempX = this.currentPanelX;\n            }\n        }\n        if (this.allowDistanceY > 0 && translatePanelY) {\n            this.currentPanelY = translatePanelY / this.scale + this.translatePanelY;\n            this.needResetY = !(-this.allowDistanceY < this.currentPanelY && this.currentPanelY < this.allowDistanceY);\n        }\n        setScaleAndTranslateStyle(this.panelEl, this.scale, tempX, this.currentPanelY);\n        return this;\n    }\n\n    _translatePanelEnd(translatePanelX) {\n        let needSwipe = false;\n        if (this.realWidth <= this.width && translatePanelX) {\n            needSwipe = this.imageViewer._dealWithMoveActionEnd({deltaX: translatePanelX}, true);\n        } else if (this.needResetX) {\n            needSwipe = this.imageViewer._dealWithMoveActionEnd({deltaX: this._calculate(this.currentPanelX, this.allowDistanceX)}, true);\n        }\n        if (needSwipe) {\n            //滑动到下一张，重置当前图片的尺寸\n            this.init(this.displayIndex, true, null, false);\n            setTimeout(() => {\n                lock.releaseLock(LOCK_NAME);\n            }, 0);\n        } else {\n            if (this.needResetX) {\n                this.translatePanelX = this.currentPanelX > 0 ? this.allowDistanceX : -this.allowDistanceX;\n            } else {\n                this.translatePanelX = this.currentPanelX;\n            }\n            if (this.needResetY) {\n                this.translatePanelY = this.currentPanelY > 0 ? this.allowDistanceY : -this.allowDistanceY;\n            } else {\n                this.translatePanelY = this.currentPanelY;\n            }\n            if (this.needResetX || this.needResetY) {\n                this.addAnimation();\n                setScaleAndTranslateStyle(this.panelEl, this.scale, this.translatePanelX, this.translatePanelY);\n            }\n            this.needResetX = this.needResetY = false;\n        }\n        return this;\n    }\n\n    isScale() {\n        return Math.abs(this.scale - 1) > 0.01;\n    }\n\n    addAnimation() {\n        this.panelEl.classList.add(ITEM_ANIMATION_CLASS);\n        this.el.classList.add(ITEM_ANIMATION_CLASS);\n    }\n\n    removeAnimation() {\n        this.panelEl.classList.remove(ITEM_ANIMATION_CLASS);\n        this.el.classList.remove(ITEM_ANIMATION_CLASS);\n    }\n}\n\nexport default Viewer;\n\n\n// WEBPACK FOOTER //\n// ./src/core/viewer.js","class Event {\n    /**\n     * 构造器\n     * @param _enableMultiple 标记该事件实例是否允许同一事件挂载多个处理函数\n     */\n    constructor(_enableMultiple = true) {\n        this._enableMultiple = _enableMultiple;\n        this._handlers = {};\n    }\n\n    /**\n     * 绑定事件处理函数\n     * @param name 事件名字\n     * @param handler 对应的事件处理函数\n     * @param enableMultiple 标记该事件是否允许挂载多个处理函数\n     */\n    on(name, handler, enableMultiple) {\n        enableMultiple = enableMultiple === undefined ? this._enableMultiple : enableMultiple;\n        if (enableMultiple) {\n            if (!this._handlers[name]) {\n                this._handlers[name] = [];\n            }\n            this._handlers[name].push(handler);\n        } else {\n            this._handlers[name] = [handler];\n        }\n    }\n\n    /**\n     * 销毁对应的处理函数\n     * @param name 事件名\n     */\n    off(name) {\n        delete this._handlers[name];\n    }\n\n    /**\n     * 触发事件\n     * @param name 事件名\n     * @param args 参数数组，传递给各个事件处理函数\n     */\n    emit(name, ...args) {\n        let handlers = this._handlers[name] || [], event = {stop: false}, length = handlers.length;\n        //传递给事件处理函数的第一个参数为事件对象\n        //该对象拥有一些可能会有用的属性和函数（比如可以终止处理函数链的执行exit）\n        args = args.concat([{\n            name: name,//事件名\n            length: length,//事件处理函数的数量\n            /**\n             * 阻止继续执行函数处理链并退出\n             */\n            exit() {\n                event.stop = true;\n            }\n        }]);\n        if (length) {\n            //仅当存在处理函数时才执行\n            handlers.forEach((handler) => {\n                !event.stop && handler.apply(this, args);\n            });\n        }\n    }\n}\n\nexport default Event;\n\n\n// WEBPACK FOOTER //\n// ./src/common/event.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/postcss-loader/lib/index.js??ref--1-2!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/index.css\n// module id = 9\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".viewer-animation {\\n    -webkit-transition: -webkit-transform .3s;\\n    transition: -webkit-transform .3s;\\n    transition: transform .3s;\\n    transition: transform .3s, -webkit-transform .3s;\\n}\\n\\n.image-viewer {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: black;\\n    z-index: 10000;\\n    font-size: 0;\\n    -webkit-transform: translate3d(0, 0, 0);\\n            transform: translate3d(0, 0, 0);\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n    overflow: hidden;\\n}\\n\\n.image-viewer .viewer {\\n    display: inline-block;\\n    position: absolute;\\n    top: 50%;\\n    width: 100%;\\n    text-align: center;\\n    -webkit-transform: translate3d(0, -50%, 0);\\n            transform: translate3d(0, -50%, 0);\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n}\\n\\n.image-viewer .image-header {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    color: #fff;\\n    font-size: 12px;\\n    z-index: 11;\\n}\\n\\n.image-viewer .image-body {\\n    width: 100%;\\n    height: 100%;\\n    font-size: 0;\\n    z-index: 10;\\n}\\n\\n.image-viewer .image-body .panel img {\\n    max-width: 100%;\\n    max-height: 100%;\\n}\\n\\n.image-viewer .image-footer {\\n    position: absolute;\\n    left: 0;\\n    bottom: 0;\\n    width: 100%;\\n    color: #fff;\\n    font-size: 12px;\\n    z-index: 11;\\n}\\n\\n.image-viewer .panel {\\n    display: inline-block;\\n    overflow: hidden;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib?{}!./src/css/index.css\n// module id = 10\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 11\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 12\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}